// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Wechat.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grpcs.Gateway.Wechat {

  /// <summary>Holder for reflection information generated from Wechat.proto</summary>
  public static partial class WechatReflection {

    #region Descriptor
    /// <summary>File descriptor for Wechat.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WechatReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxXZWNoYXQucHJvdG8SFEdycGNzLkdhdGV3YXkuV2VjaGF0IgcKBUVtcHR5",
            "IioKBUVycm9yEhAKCGVycl9jb2RlGAEgASgFEg8KB2Vycl9tc2cYAiABKAki",
            "PQoRR2V0QmluZFVybFJlcXVlc3QSFAoMcmVkaXJlY3RfdXJsGAEgASgJEhIK",
            "CnVzZV9tb2JpbGUYAiABKAgiTQoSR2V0QmluZFVybFJlc3BvbnNlEioKBWVy",
            "cm9yGAEgASgLMhsuR3JwY3MuR2F0ZXdheS5XZWNoYXQuRXJyb3ISCwoDdXJs",
            "GAIgASgJIiAKDkdldEluZm9SZXF1ZXN0Eg4KBmFwcF9pZBgBIAEoCSKYAgoP",
            "R2V0SW5mb1Jlc3BvbnNlEioKBWVycm9yGAEgASgLMhsuR3JwY3MuR2F0ZXdh",
            "eS5XZWNoYXQuRXJyb3ISEQoJdXNlcl9uYW1lGAIgASgJEhEKCW5pY2tfbmFt",
            "ZRgDIAEoCRIQCghoZWFkX2ltZxgEIAEoCRIWCg5wcmluY2lwYWxfbmFtZRgF",
            "IAEoCRINCgVhbGlhcxgGIAEoCRIZChFzZXJ2aWNlX3R5cGVfaW5mbxgHIAEo",
            "BRIYChB2ZXJpZnlfdHlwZV9pbmZvGAggASgFEhIKCnFyY29kZV91cmwYCSAB",
            "KAkSEwoLcGVybWlzc2lvbnMYCiADKAUSDgoGYXBwX2lkGAsgASgJEgwKBHR5",
            "cGUYDCABKAkiHwoPR2V0QXBwSWRSZXF1ZXN0EgwKBGNvZGUYASABKAkiTgoQ",
            "R2V0QXBwSWRSZXNwb25zZRIqCgVlcnJvchgBIAEoCzIbLkdycGNzLkdhdGV3",
            "YXkuV2VjaGF0LkVycm9yEg4KBmFwcF9pZBgCIAEoCSKLAQoPTWVzc2FnZVJl",
            "c3BvbnNlEioKBWVycm9yGAEgASgLMhsuR3JwY3MuR2F0ZXdheS5XZWNoYXQu",
            "RXJyb3ISDAoEdHlwZRgCIAEoCRIOCgZhcHBfaWQYAyABKAkSDwoHb3Blbl9p",
            "ZBgEIAEoCRIMCgR0aW1lGAUgASgFEg8KB2NvbnRlbnQYBiABKAkiOgoUTWVz",
            "c2FnZVN0YXR1c1JlcXVlc3QSEgoKbWVzc2FnZV9pZBgBIAEoCRIOCgZkZXRh",
            "aWwYAiABKAgipgMKFU1lc3NhZ2VTdGF0dXNSZXNwb25zZRIqCgVlcnJvchgB",
            "IAEoCzIbLkdycGNzLkdhdGV3YXkuV2VjaGF0LkVycm9yEkIKBnN0YXR1cxgC",
            "IAEoDjIyLkdycGNzLkdhdGV3YXkuV2VjaGF0Lk1lc3NhZ2VTdGF0dXNSZXNw",
            "b25zZS5TdGF0dXMSEQoJdG90YWxfbnVtGAMgASgFEhMKC3N1Y2Nlc3NfbnVt",
            "GAQgASgFEhYKDnVzZXJfYmxvY2tfbnVtGAUgASgFEhkKEXN5c3RlbV9mYWls",
            "ZWRfbnVtGAYgASgFEhYKDnNlbmRfZXJyb3JfbnVtGAcgASgFEhEKCXNlbmRf",
            "dGltZRgIIAEoBRIUCgxzdWNjZXNzX2xpc3QYCSADKAkSFwoPdXNlcl9ibG9j",
            "a19saXN0GAogAygJEhoKEnN5c3RlbV9mYWlsZWRfbGlzdBgLIAMoCRIXCg9z",
            "ZW5kX2Vycm9yX2xpc3QYDCADKAkiMwoGU3RhdHVzEgsKB1BFTkRJTkcQABIO",
            "CgpQUk9DRVNTSU5HEAESDAoIRklOSVNIRUQQAiKSAgoTR2V0VGVtcGxhdGVS",
            "ZXNwb25zZRIqCgVlcnJvchgBIAEoCzIbLkdycGNzLkdhdGV3YXkuV2VjaGF0",
            "LkVycm9yEkkKDXRlbXBsYXRlX2xpc3QYAiADKAsyMi5HcnBjcy5HYXRld2F5",
            "LldlY2hhdC5HZXRUZW1wbGF0ZVJlc3BvbnNlLkxpc3RJdGVtGoMBCghMaXN0",
            "SXRlbRITCgt0ZW1wbGF0ZV9pZBgBIAEoCRINCgV0aXRsZRgCIAEoCRIYChBw",
            "cmltYXJ5X2luZHVzdHJ5GAMgASgJEhcKD2RlcHV0eV9pbmR1c3RyeRgEIAEo",
            "CRIPCgdjb250ZW50GAUgASgJEg8KB2V4YW1wbGUYBiABKAkifgoKVGFyZ2V0",
            "SXRlbRIPCgdvcGVuX2lkGAEgASgJEjcKBGRhdGEYAiADKAsyKS5HcnBjcy5H",
            "YXRld2F5LldlY2hhdC5UYXJnZXRJdGVtLlJlcGxhY2VyGiYKCFJlcGxhY2Vy",
            "EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCSK8AgoTU2VuZFRlbXBsYXRl",
            "UmVxdWVzdBIOCgZhcHBfaWQYASABKAkSMQoHdGFyZ2V0cxgCIAMoCzIgLkdy",
            "cGNzLkdhdGV3YXkuV2VjaGF0LlRhcmdldEl0ZW0SEwoLdGVtcGxhdGVfaWQY",
            "AyABKAkSDwoHZm9ybV9pZBgEIAEoCRILCgN1cmwYBSABKAkSQAoEZGF0YRgG",
            "IAMoCzIyLkdycGNzLkdhdGV3YXkuV2VjaGF0LlNlbmRUZW1wbGF0ZVJlcXVl",
            "c3QuRGF0YUl0ZW0SDAoEdGltZRgHIAEoBRIRCglub19zdGF0dXMYCCABKAgS",
            "FQoNaGlnaF9wcmlvcml0eRgJIAEoCBo1CghEYXRhSXRlbRILCgNrZXkYASAB",
            "KAkSDQoFdmFsdWUYAiABKAkSDQoFY29sb3IYAyABKAkinQEKD1NlbmRUZXh0",
            "UmVxdWVzdBIOCgZhcHBfaWQYASABKAkSMQoHdGFyZ2V0cxgCIAMoCzIgLkdy",
            "cGNzLkdhdGV3YXkuV2VjaGF0LlRhcmdldEl0ZW0SDwoHY29udGVudBgDIAEo",
            "CRIMCgR0aW1lGAQgASgFEhEKCW5vX3N0YXR1cxgFIAEoCBIVCg1oaWdoX3By",
            "aW9yaXR5GAYgASgIIp8BChBTZW5kSW1hZ2VSZXF1ZXN0Eg4KBmFwcF9pZBgB",
            "IAEoCRIxCgd0YXJnZXRzGAIgAygLMiAuR3JwY3MuR2F0ZXdheS5XZWNoYXQu",
            "VGFyZ2V0SXRlbRIQCghpbWFnZV9pZBgDIAEoCRIMCgR0aW1lGAQgASgFEhEK",
            "CW5vX3N0YXR1cxgFIAEoCBIVCg1oaWdoX3ByaW9yaXR5GAYgASgIIs0BCg9T",
            "ZW5kTmV3c1JlcXVlc3QSDgoGYXBwX2lkGAEgASgJEjEKB3RhcmdldHMYAiAD",
            "KAsyIC5HcnBjcy5HYXRld2F5LldlY2hhdC5UYXJnZXRJdGVtEg0KBWltYWdl",
            "GAMgASgJEg0KBXRpdGxlGAQgASgJEhMKC2Rlc2NyaXB0aW9uGAUgASgJEgwK",
            "BGxpbmsYBiABKAkSDAoEdGltZRgHIAEoBRIRCglub19zdGF0dXMYCCABKAgS",
            "FQoNaGlnaF9wcmlvcml0eRgJIAEoCCLYAQoUU2VuZFd4QXBwQ2FyZFJlcXVl",
            "c3QSDgoGYXBwX2lkGAEgASgJEjEKB3RhcmdldHMYAiADKAsyIC5HcnBjcy5H",
            "YXRld2F5LldlY2hhdC5UYXJnZXRJdGVtEg0KBXRpdGxlGAMgASgJEhEKCXd4",
            "X2FwcF9pZBgEIAEoCRIRCglwYWdlX3BhdGgYBSABKAkSEAoIaW1hZ2VfaWQY",
            "BiABKAkSDAoEdGltZRgHIAEoBRIRCglub19zdGF0dXMYCCABKAgSFQoNaGln",
            "aF9wcmlvcml0eRgJIAEoCCJoChNTZW5kTWVzc2FnZVJlc3BvbnNlEioKBWVy",
            "cm9yGAEgASgLMhsuR3JwY3MuR2F0ZXdheS5XZWNoYXQuRXJyb3ISEgoKbWVz",
            "c2FnZV9pZBgCIAEoCRIRCglzZW5kX3RpbWUYAyABKAUiqgEKF1NldFNlcnZp",
            "Y2VEb21haW5SZXF1ZXN0Eg4KBmFwcF9pZBgBIAEoCRIWCg5yZXF1ZXN0X2Rv",
            "bWFpbhgCIAMoCRIZChF3c19yZXF1ZXN0X2RvbWFpbhgDIAMoCRIVCg11cGxv",
            "YWRfZG9tYWluGAQgAygJEh0KFWRvd25sb2FkZG9tYWluX2RvbWFpbhgFIAMo",
            "CRIWCg53ZWJ2aWV3X2RvbWFpbhgGIAMoCSJdCg1EZXBsb3lSZXF1ZXN0Eg4K",
            "BmFwcF9pZBgBIAEoCRITCgt0ZW1wbGF0ZV9pZBgCIAEoBRIUCgx1c2VyX3Zl",
            "cnNpb24YAyABKAkSEQoJdXNlcl9kZXNjGAQgASgJIjYKFkdldE9wZW5JZEJ5",
            "Q29kZVJlcXVlc3QSDgoGYXBwX2lkGAEgASgJEgwKBGNvZGUYAiABKAkiagoX",
            "R2V0T3BlbklkQnlDb2RlUmVzcG9uc2USKgoFZXJyb3IYASABKAsyGy5HcnBj",
            "cy5HYXRld2F5LldlY2hhdC5FcnJvchIPCgdvcGVuX2lkGAIgASgJEhIKCnNl",
            "Y3JldF9rZXkYAyABKAkiNQoSR2V0VXNlckluZm9SZXF1ZXN0Eg4KBmFwcF9p",
            "ZBgBIAEoCRIPCgdvcGVuX2lkGAIgASgJItwBChNHZXRVc2VySW5mb1Jlc3Bv",
            "bnNlEioKBWVycm9yGAEgASgLMhsuR3JwY3MuR2F0ZXdheS5XZWNoYXQuRXJy",
            "b3ISFgoOc3Vic2NyaWJlX3RpbWUYAiABKAUSDwoHb3Blbl9pZBgDIAEoCRIR",
            "CgluaWNrX25hbWUYBCABKAkSCwoDc2V4GAUgASgFEg8KB2NvdW50cnkYBiAB",
            "KAkSEAoIcHJvdmluY2UYByABKAkSDAoEY2l0eRgIIAEoCRINCgVwaG90bxgJ",
            "IAEoCRIQCgh1bmlvbl9pZBgKIAEoCSIzChFDcmVhdGVNZW51UmVxdWVzdBIO",
            "CgZhcHBfaWQYASABKAkSDgoGY29uZmlnGAIgASgJIj0KFUdldEF1dGhDb2Rl",
            "VXJsUmVxdWVzdBIOCgZhcHBfaWQYASABKAkSFAoMcmVkaXJlY3RfdXJsGAIg",
            "ASgJIlEKFkdldEF1dGhDb2RlVXJsUmVzcG9uc2USKgoFZXJyb3IYASABKAsy",
            "Gy5HcnBjcy5HYXRld2F5LldlY2hhdC5FcnJvchILCgN1cmwYAiABKAkiJAoS",
            "R2V0SnNUaWNrZXRSZXF1ZXN0Eg4KBmFwcF9pZBgBIAEoCSJUChNHZXRKc1Rp",
            "Y2tldFJlc3BvbnNlEioKBWVycm9yGAEgASgLMhsuR3JwY3MuR2F0ZXdheS5X",
            "ZWNoYXQuRXJyb3ISEQoJanNfdGlja2V0GAIgASgJIjIKElVwbG9hZEltYWdl",
            "UmVxdWVzdBIOCgZhcHBfaWQYASABKAkSDAoEZmlsZRgCIAEoDCJgChNVcGxv",
            "YWRJbWFnZVJlc3BvbnNlEioKBWVycm9yGAEgASgLMhsuR3JwY3MuR2F0ZXdh",
            "eS5XZWNoYXQuRXJyb3ISEAoIaW1hZ2VfaWQYAiABKAkSCwoDdXJsGAMgASgJ",
            "IjYKEkRlbGV0ZUltYWdlUmVxdWVzdBIOCgZhcHBfaWQYASABKAkSEAoIaW1h",
            "Z2VfaWQYAiABKAkiMwoTR2V0SW1hZ2VMaXN0UmVxdWVzdBIOCgZhcHBfaWQY",
            "ASABKAkSDAoEcGFnZRgCIAEoBSI/CglJbWFnZUl0ZW0SEAoIaW1hZ2VfaWQY",
            "ASABKAkSEwoLdXBkYXRlX3RpbWUYAiABKAUSCwoDdXJsGAMgASgJIoABChRH",
            "ZXRJbWFnZUxpc3RSZXNwb25zZRIqCgVlcnJvchgBIAEoCzIbLkdycGNzLkdh",
            "dGV3YXkuV2VjaGF0LkVycm9yEg0KBXRvdGFsGAIgASgFEi0KBGxpc3QYAyAD",
            "KAsyHy5HcnBjcy5HYXRld2F5LldlY2hhdC5JbWFnZUl0ZW0iMAoQR2V0UXJD",
            "b2RlUmVxdWVzdBIOCgZhcHBfaWQYASABKAkSDAoEZGF0YRgCIAEoCSJ3ChFH",
            "ZXRRckNvZGVSZXNwb25zZRIqCgVlcnJvchgBIAEoCzIbLkdycGNzLkdhdGV3",
            "YXkuV2VjaGF0LkVycm9yEhEKCWltYWdlX3VybBgCIAEoCRISCgpxcmNvZGVf",
            "dXJsGAMgASgJEg8KB2V4cGlyZWQYBCABKAUypQIKCUNvbXBvbmVudBJhCgpH",
            "ZXRCaW5kVXJsEicuR3JwY3MuR2F0ZXdheS5XZWNoYXQuR2V0QmluZFVybFJl",
            "cXVlc3QaKC5HcnBjcy5HYXRld2F5LldlY2hhdC5HZXRCaW5kVXJsUmVzcG9u",
            "c2UiABJYCgdHZXRJbmZvEiQuR3JwY3MuR2F0ZXdheS5XZWNoYXQuR2V0SW5m",
            "b1JlcXVlc3QaJS5HcnBjcy5HYXRld2F5LldlY2hhdC5HZXRJbmZvUmVzcG9u",
            "c2UiABJbCghHZXRBcHBJZBIlLkdycGNzLkdhdGV3YXkuV2VjaGF0LkdldEFw",
            "cElkUmVxdWVzdBomLkdycGNzLkdhdGV3YXkuV2VjaGF0LkdldEFwcElkUmVz",
            "cG9uc2UiADLDBwoHTWVzc2FnZRJSCghHZXRFdmVudBIbLkdycGNzLkdhdGV3",
            "YXkuV2VjaGF0LkVtcHR5GiUuR3JwY3MuR2F0ZXdheS5XZWNoYXQuTWVzc2Fn",
            "ZVJlc3BvbnNlIgAwARJRCgdHZXRVc2VyEhsuR3JwY3MuR2F0ZXdheS5XZWNo",
            "YXQuRW1wdHkaJS5HcnBjcy5HYXRld2F5LldlY2hhdC5NZXNzYWdlUmVzcG9u",
            "c2UiADABEmYKCUdldFN0YXR1cxIqLkdycGNzLkdhdGV3YXkuV2VjaGF0Lk1l",
            "c3NhZ2VTdGF0dXNSZXF1ZXN0GisuR3JwY3MuR2F0ZXdheS5XZWNoYXQuTWVz",
            "c2FnZVN0YXR1c1Jlc3BvbnNlIgASXgoIU2VuZFRleHQSJS5HcnBjcy5HYXRl",
            "d2F5LldlY2hhdC5TZW5kVGV4dFJlcXVlc3QaKS5HcnBjcy5HYXRld2F5Lldl",
            "Y2hhdC5TZW5kTWVzc2FnZVJlc3BvbnNlIgASYAoJU2VuZEltYWdlEiYuR3Jw",
            "Y3MuR2F0ZXdheS5XZWNoYXQuU2VuZEltYWdlUmVxdWVzdBopLkdycGNzLkdh",
            "dGV3YXkuV2VjaGF0LlNlbmRNZXNzYWdlUmVzcG9uc2UiABJeCghTZW5kTmV3",
            "cxIlLkdycGNzLkdhdGV3YXkuV2VjaGF0LlNlbmROZXdzUmVxdWVzdBopLkdy",
            "cGNzLkdhdGV3YXkuV2VjaGF0LlNlbmRNZXNzYWdlUmVzcG9uc2UiABJoCg1T",
            "ZW5kV3hBcHBDYXJkEiouR3JwY3MuR2F0ZXdheS5XZWNoYXQuU2VuZFd4QXBw",
            "Q2FyZFJlcXVlc3QaKS5HcnBjcy5HYXRld2F5LldlY2hhdC5TZW5kTWVzc2Fn",
            "ZVJlc3BvbnNlIgASYAoLR2V0VGVtcGxhdGUSJC5HcnBjcy5HYXRld2F5Lldl",
            "Y2hhdC5HZXRJbmZvUmVxdWVzdBopLkdycGNzLkdhdGV3YXkuV2VjaGF0Lkdl",
            "dFRlbXBsYXRlUmVzcG9uc2UiABJmCgxTZW5kVGVtcGxhdGUSKS5HcnBjcy5H",
            "YXRld2F5LldlY2hhdC5TZW5kVGVtcGxhdGVSZXF1ZXN0GikuR3JwY3MuR2F0",
            "ZXdheS5XZWNoYXQuU2VuZE1lc3NhZ2VSZXNwb25zZSIAElMKBkNhbmNlbBIq",
            "LkdycGNzLkdhdGV3YXkuV2VjaGF0Lk1lc3NhZ2VTdGF0dXNSZXF1ZXN0Ghsu",
            "R3JwY3MuR2F0ZXdheS5XZWNoYXQuRXJyb3IiADKDAwoFV3hBcHASagoJR2V0",
            "T3BlbklkEiwuR3JwY3MuR2F0ZXdheS5XZWNoYXQuR2V0T3BlbklkQnlDb2Rl",
            "UmVxdWVzdBotLkdycGNzLkdhdGV3YXkuV2VjaGF0LkdldE9wZW5JZEJ5Q29k",
            "ZVJlc3BvbnNlIgASYAoQU2V0U2VydmljZURvbWFpbhItLkdycGNzLkdhdGV3",
            "YXkuV2VjaGF0LlNldFNlcnZpY2VEb21haW5SZXF1ZXN0GhsuR3JwY3MuR2F0",
            "ZXdheS5XZWNoYXQuRXJyb3IiABJMCgZEZXBsb3kSIy5HcnBjcy5HYXRld2F5",
            "LldlY2hhdC5EZXBsb3lSZXF1ZXN0GhsuR3JwY3MuR2F0ZXdheS5XZWNoYXQu",
            "RXJyb3IiABJeCglHZXRRckNvZGUSJi5HcnBjcy5HYXRld2F5LldlY2hhdC5H",
            "ZXRRckNvZGVSZXF1ZXN0GicuR3JwY3MuR2F0ZXdheS5XZWNoYXQuR2V0UXJD",
            "b2RlUmVzcG9uc2UiADLeBwoFV3hXZWISbQoOR2V0QXV0aENvZGVVcmwSKy5H",
            "cnBjcy5HYXRld2F5LldlY2hhdC5HZXRBdXRoQ29kZVVybFJlcXVlc3QaLC5H",
            "cnBjcy5HYXRld2F5LldlY2hhdC5HZXRBdXRoQ29kZVVybFJlc3BvbnNlIgAS",
            "agoJR2V0T3BlbklkEiwuR3JwY3MuR2F0ZXdheS5XZWNoYXQuR2V0T3Blbklk",
            "QnlDb2RlUmVxdWVzdBotLkdycGNzLkdhdGV3YXkuV2VjaGF0LkdldE9wZW5J",
            "ZEJ5Q29kZVJlc3BvbnNlIgASZAoLR2V0VXNlckluZm8SKC5HcnBjcy5HYXRl",
            "d2F5LldlY2hhdC5HZXRVc2VySW5mb1JlcXVlc3QaKS5HcnBjcy5HYXRld2F5",
            "LldlY2hhdC5HZXRVc2VySW5mb1Jlc3BvbnNlIgASZAoLR2V0SnNUaWNrZXQS",
            "KC5HcnBjcy5HYXRld2F5LldlY2hhdC5HZXRKc1RpY2tldFJlcXVlc3QaKS5H",
            "cnBjcy5HYXRld2F5LldlY2hhdC5HZXRKc1RpY2tldFJlc3BvbnNlIgASXgoJ",
            "R2V0UXJDb2RlEiYuR3JwY3MuR2F0ZXdheS5XZWNoYXQuR2V0UXJDb2RlUmVx",
            "dWVzdBonLkdycGNzLkdhdGV3YXkuV2VjaGF0LkdldFFyQ29kZVJlc3BvbnNl",
            "IgASVAoKQ3JlYXRlTWVudRInLkdycGNzLkdhdGV3YXkuV2VjaGF0LkNyZWF0",
            "ZU1lbnVSZXF1ZXN0GhsuR3JwY3MuR2F0ZXdheS5XZWNoYXQuRXJyb3IiABJR",
            "CgpEZWxldGVNZW51EiQuR3JwY3MuR2F0ZXdheS5XZWNoYXQuR2V0SW5mb1Jl",
            "cXVlc3QaGy5HcnBjcy5HYXRld2F5LldlY2hhdC5FcnJvciIAEmcKDEdldElt",
            "YWdlTGlzdBIpLkdycGNzLkdhdGV3YXkuV2VjaGF0LkdldEltYWdlTGlzdFJl",
            "cXVlc3QaKi5HcnBjcy5HYXRld2F5LldlY2hhdC5HZXRJbWFnZUxpc3RSZXNw",
            "b25zZSIAEmQKC1VwbG9hZEltYWdlEiguR3JwY3MuR2F0ZXdheS5XZWNoYXQu",
            "VXBsb2FkSW1hZ2VSZXF1ZXN0GikuR3JwY3MuR2F0ZXdheS5XZWNoYXQuVXBs",
            "b2FkSW1hZ2VSZXNwb25zZSIAElYKC0RlbGV0ZUltYWdlEiguR3JwY3MuR2F0",
            "ZXdheS5XZWNoYXQuRGVsZXRlSW1hZ2VSZXF1ZXN0GhsuR3JwY3MuR2F0ZXdh",
            "eS5XZWNoYXQuRXJyb3IiAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.Empty), global::Grpcs.Gateway.Wechat.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.Error), global::Grpcs.Gateway.Wechat.Error.Parser, new[]{ "ErrCode", "ErrMsg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetBindUrlRequest), global::Grpcs.Gateway.Wechat.GetBindUrlRequest.Parser, new[]{ "RedirectUrl", "UseMobile" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetBindUrlResponse), global::Grpcs.Gateway.Wechat.GetBindUrlResponse.Parser, new[]{ "Error", "Url" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetInfoRequest), global::Grpcs.Gateway.Wechat.GetInfoRequest.Parser, new[]{ "AppId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetInfoResponse), global::Grpcs.Gateway.Wechat.GetInfoResponse.Parser, new[]{ "Error", "UserName", "NickName", "HeadImg", "PrincipalName", "Alias", "ServiceTypeInfo", "VerifyTypeInfo", "QrcodeUrl", "Permissions", "AppId", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetAppIdRequest), global::Grpcs.Gateway.Wechat.GetAppIdRequest.Parser, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetAppIdResponse), global::Grpcs.Gateway.Wechat.GetAppIdResponse.Parser, new[]{ "Error", "AppId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.MessageResponse), global::Grpcs.Gateway.Wechat.MessageResponse.Parser, new[]{ "Error", "Type", "AppId", "OpenId", "Time", "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.MessageStatusRequest), global::Grpcs.Gateway.Wechat.MessageStatusRequest.Parser, new[]{ "MessageId", "Detail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.MessageStatusResponse), global::Grpcs.Gateway.Wechat.MessageStatusResponse.Parser, new[]{ "Error", "Status", "TotalNum", "SuccessNum", "UserBlockNum", "SystemFailedNum", "SendErrorNum", "SendTime", "SuccessList", "UserBlockList", "SystemFailedList", "SendErrorList" }, null, new[]{ typeof(global::Grpcs.Gateway.Wechat.MessageStatusResponse.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetTemplateResponse), global::Grpcs.Gateway.Wechat.GetTemplateResponse.Parser, new[]{ "Error", "TemplateList" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetTemplateResponse.Types.ListItem), global::Grpcs.Gateway.Wechat.GetTemplateResponse.Types.ListItem.Parser, new[]{ "TemplateId", "Title", "PrimaryIndustry", "DeputyIndustry", "Content", "Example" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.TargetItem), global::Grpcs.Gateway.Wechat.TargetItem.Parser, new[]{ "OpenId", "Data" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.TargetItem.Types.Replacer), global::Grpcs.Gateway.Wechat.TargetItem.Types.Replacer.Parser, new[]{ "Key", "Value" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.SendTemplateRequest), global::Grpcs.Gateway.Wechat.SendTemplateRequest.Parser, new[]{ "AppId", "Targets", "TemplateId", "FormId", "Url", "Data", "Time", "NoStatus", "HighPriority" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.SendTemplateRequest.Types.DataItem), global::Grpcs.Gateway.Wechat.SendTemplateRequest.Types.DataItem.Parser, new[]{ "Key", "Value", "Color" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.SendTextRequest), global::Grpcs.Gateway.Wechat.SendTextRequest.Parser, new[]{ "AppId", "Targets", "Content", "Time", "NoStatus", "HighPriority" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.SendImageRequest), global::Grpcs.Gateway.Wechat.SendImageRequest.Parser, new[]{ "AppId", "Targets", "ImageId", "Time", "NoStatus", "HighPriority" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.SendNewsRequest), global::Grpcs.Gateway.Wechat.SendNewsRequest.Parser, new[]{ "AppId", "Targets", "Image", "Title", "Description", "Link", "Time", "NoStatus", "HighPriority" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.SendWxAppCardRequest), global::Grpcs.Gateway.Wechat.SendWxAppCardRequest.Parser, new[]{ "AppId", "Targets", "Title", "WxAppId", "PagePath", "ImageId", "Time", "NoStatus", "HighPriority" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.SendMessageResponse), global::Grpcs.Gateway.Wechat.SendMessageResponse.Parser, new[]{ "Error", "MessageId", "SendTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.SetServiceDomainRequest), global::Grpcs.Gateway.Wechat.SetServiceDomainRequest.Parser, new[]{ "AppId", "RequestDomain", "WsRequestDomain", "UploadDomain", "DownloaddomainDomain", "WebviewDomain" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.DeployRequest), global::Grpcs.Gateway.Wechat.DeployRequest.Parser, new[]{ "AppId", "TemplateId", "UserVersion", "UserDesc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetOpenIdByCodeRequest), global::Grpcs.Gateway.Wechat.GetOpenIdByCodeRequest.Parser, new[]{ "AppId", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetOpenIdByCodeResponse), global::Grpcs.Gateway.Wechat.GetOpenIdByCodeResponse.Parser, new[]{ "Error", "OpenId", "SecretKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetUserInfoRequest), global::Grpcs.Gateway.Wechat.GetUserInfoRequest.Parser, new[]{ "AppId", "OpenId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetUserInfoResponse), global::Grpcs.Gateway.Wechat.GetUserInfoResponse.Parser, new[]{ "Error", "SubscribeTime", "OpenId", "NickName", "Sex", "Country", "Province", "City", "Photo", "UnionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.CreateMenuRequest), global::Grpcs.Gateway.Wechat.CreateMenuRequest.Parser, new[]{ "AppId", "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetAuthCodeUrlRequest), global::Grpcs.Gateway.Wechat.GetAuthCodeUrlRequest.Parser, new[]{ "AppId", "RedirectUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetAuthCodeUrlResponse), global::Grpcs.Gateway.Wechat.GetAuthCodeUrlResponse.Parser, new[]{ "Error", "Url" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetJsTicketRequest), global::Grpcs.Gateway.Wechat.GetJsTicketRequest.Parser, new[]{ "AppId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetJsTicketResponse), global::Grpcs.Gateway.Wechat.GetJsTicketResponse.Parser, new[]{ "Error", "JsTicket" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.UploadImageRequest), global::Grpcs.Gateway.Wechat.UploadImageRequest.Parser, new[]{ "AppId", "File" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.UploadImageResponse), global::Grpcs.Gateway.Wechat.UploadImageResponse.Parser, new[]{ "Error", "ImageId", "Url" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.DeleteImageRequest), global::Grpcs.Gateway.Wechat.DeleteImageRequest.Parser, new[]{ "AppId", "ImageId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetImageListRequest), global::Grpcs.Gateway.Wechat.GetImageListRequest.Parser, new[]{ "AppId", "Page" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.ImageItem), global::Grpcs.Gateway.Wechat.ImageItem.Parser, new[]{ "ImageId", "UpdateTime", "Url" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetImageListResponse), global::Grpcs.Gateway.Wechat.GetImageListResponse.Parser, new[]{ "Error", "Total", "List" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetQrCodeRequest), global::Grpcs.Gateway.Wechat.GetQrCodeRequest.Parser, new[]{ "AppId", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpcs.Gateway.Wechat.GetQrCodeResponse), global::Grpcs.Gateway.Wechat.GetQrCodeResponse.Parser, new[]{ "Error", "ImageUrl", "QrcodeUrl", "Expired" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///公共
  /// </summary>
  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Error : pb::IMessage<Error> {
    private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Error> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error(Error other) : this() {
      errCode_ = other.errCode_;
      errMsg_ = other.errMsg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error Clone() {
      return new Error(this);
    }

    /// <summary>Field number for the "err_code" field.</summary>
    public const int ErrCodeFieldNumber = 1;
    private int errCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrCode {
      get { return errCode_; }
      set {
        errCode_ = value;
      }
    }

    /// <summary>Field number for the "err_msg" field.</summary>
    public const int ErrMsgFieldNumber = 2;
    private string errMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrMsg {
      get { return errMsg_; }
      set {
        errMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Error);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Error other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrCode != other.ErrCode) return false;
      if (ErrMsg != other.ErrMsg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrCode != 0) hash ^= ErrCode.GetHashCode();
      if (ErrMsg.Length != 0) hash ^= ErrMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrCode);
      }
      if (ErrMsg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrCode);
      }
      if (ErrMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Error other) {
      if (other == null) {
        return;
      }
      if (other.ErrCode != 0) {
        ErrCode = other.ErrCode;
      }
      if (other.ErrMsg.Length != 0) {
        ErrMsg = other.ErrMsg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrCode = input.ReadInt32();
            break;
          }
          case 18: {
            ErrMsg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///平台部分
  /// </summary>
  public sealed partial class GetBindUrlRequest : pb::IMessage<GetBindUrlRequest> {
    private static readonly pb::MessageParser<GetBindUrlRequest> _parser = new pb::MessageParser<GetBindUrlRequest>(() => new GetBindUrlRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBindUrlRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBindUrlRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBindUrlRequest(GetBindUrlRequest other) : this() {
      redirectUrl_ = other.redirectUrl_;
      useMobile_ = other.useMobile_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBindUrlRequest Clone() {
      return new GetBindUrlRequest(this);
    }

    /// <summary>Field number for the "redirect_url" field.</summary>
    public const int RedirectUrlFieldNumber = 1;
    private string redirectUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RedirectUrl {
      get { return redirectUrl_; }
      set {
        redirectUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_mobile" field.</summary>
    public const int UseMobileFieldNumber = 2;
    private bool useMobile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseMobile {
      get { return useMobile_; }
      set {
        useMobile_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBindUrlRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBindUrlRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RedirectUrl != other.RedirectUrl) return false;
      if (UseMobile != other.UseMobile) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RedirectUrl.Length != 0) hash ^= RedirectUrl.GetHashCode();
      if (UseMobile != false) hash ^= UseMobile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RedirectUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RedirectUrl);
      }
      if (UseMobile != false) {
        output.WriteRawTag(16);
        output.WriteBool(UseMobile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RedirectUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedirectUrl);
      }
      if (UseMobile != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBindUrlRequest other) {
      if (other == null) {
        return;
      }
      if (other.RedirectUrl.Length != 0) {
        RedirectUrl = other.RedirectUrl;
      }
      if (other.UseMobile != false) {
        UseMobile = other.UseMobile;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RedirectUrl = input.ReadString();
            break;
          }
          case 16: {
            UseMobile = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBindUrlResponse : pb::IMessage<GetBindUrlResponse> {
    private static readonly pb::MessageParser<GetBindUrlResponse> _parser = new pb::MessageParser<GetBindUrlResponse>(() => new GetBindUrlResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBindUrlResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBindUrlResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBindUrlResponse(GetBindUrlResponse other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBindUrlResponse Clone() {
      return new GetBindUrlResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Grpcs.Gateway.Wechat.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpcs.Gateway.Wechat.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBindUrlResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBindUrlResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBindUrlResponse other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Grpcs.Gateway.Wechat.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Grpcs.Gateway.Wechat.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetInfoRequest : pb::IMessage<GetInfoRequest> {
    private static readonly pb::MessageParser<GetInfoRequest> _parser = new pb::MessageParser<GetInfoRequest>(() => new GetInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoRequest(GetInfoRequest other) : this() {
      appId_ = other.appId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoRequest Clone() {
      return new GetInfoRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetInfoResponse : pb::IMessage<GetInfoResponse> {
    private static readonly pb::MessageParser<GetInfoResponse> _parser = new pb::MessageParser<GetInfoResponse>(() => new GetInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoResponse(GetInfoResponse other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      userName_ = other.userName_;
      nickName_ = other.nickName_;
      headImg_ = other.headImg_;
      principalName_ = other.principalName_;
      alias_ = other.alias_;
      serviceTypeInfo_ = other.serviceTypeInfo_;
      verifyTypeInfo_ = other.verifyTypeInfo_;
      qrcodeUrl_ = other.qrcodeUrl_;
      permissions_ = other.permissions_.Clone();
      appId_ = other.appId_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoResponse Clone() {
      return new GetInfoResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Grpcs.Gateway.Wechat.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpcs.Gateway.Wechat.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 2;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nick_name" field.</summary>
    public const int NickNameFieldNumber = 3;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "head_img" field.</summary>
    public const int HeadImgFieldNumber = 4;
    private string headImg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeadImg {
      get { return headImg_; }
      set {
        headImg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "principal_name" field.</summary>
    public const int PrincipalNameFieldNumber = 5;
    private string principalName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrincipalName {
      get { return principalName_; }
      set {
        principalName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alias" field.</summary>
    public const int AliasFieldNumber = 6;
    private string alias_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Alias {
      get { return alias_; }
      set {
        alias_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_type_info" field.</summary>
    public const int ServiceTypeInfoFieldNumber = 7;
    private int serviceTypeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServiceTypeInfo {
      get { return serviceTypeInfo_; }
      set {
        serviceTypeInfo_ = value;
      }
    }

    /// <summary>Field number for the "verify_type_info" field.</summary>
    public const int VerifyTypeInfoFieldNumber = 8;
    private int verifyTypeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VerifyTypeInfo {
      get { return verifyTypeInfo_; }
      set {
        verifyTypeInfo_ = value;
      }
    }

    /// <summary>Field number for the "qrcode_url" field.</summary>
    public const int QrcodeUrlFieldNumber = 9;
    private string qrcodeUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QrcodeUrl {
      get { return qrcodeUrl_; }
      set {
        qrcodeUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "permissions" field.</summary>
    public const int PermissionsFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_permissions_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> permissions_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Permissions {
      get { return permissions_; }
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 11;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 12;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (UserName != other.UserName) return false;
      if (NickName != other.NickName) return false;
      if (HeadImg != other.HeadImg) return false;
      if (PrincipalName != other.PrincipalName) return false;
      if (Alias != other.Alias) return false;
      if (ServiceTypeInfo != other.ServiceTypeInfo) return false;
      if (VerifyTypeInfo != other.VerifyTypeInfo) return false;
      if (QrcodeUrl != other.QrcodeUrl) return false;
      if(!permissions_.Equals(other.permissions_)) return false;
      if (AppId != other.AppId) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (HeadImg.Length != 0) hash ^= HeadImg.GetHashCode();
      if (PrincipalName.Length != 0) hash ^= PrincipalName.GetHashCode();
      if (Alias.Length != 0) hash ^= Alias.GetHashCode();
      if (ServiceTypeInfo != 0) hash ^= ServiceTypeInfo.GetHashCode();
      if (VerifyTypeInfo != 0) hash ^= VerifyTypeInfo.GetHashCode();
      if (QrcodeUrl.Length != 0) hash ^= QrcodeUrl.GetHashCode();
      hash ^= permissions_.GetHashCode();
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NickName);
      }
      if (HeadImg.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(HeadImg);
      }
      if (PrincipalName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PrincipalName);
      }
      if (Alias.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Alias);
      }
      if (ServiceTypeInfo != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ServiceTypeInfo);
      }
      if (VerifyTypeInfo != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(VerifyTypeInfo);
      }
      if (QrcodeUrl.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(QrcodeUrl);
      }
      permissions_.WriteTo(output, _repeated_permissions_codec);
      if (AppId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(AppId);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (HeadImg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeadImg);
      }
      if (PrincipalName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrincipalName);
      }
      if (Alias.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Alias);
      }
      if (ServiceTypeInfo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServiceTypeInfo);
      }
      if (VerifyTypeInfo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VerifyTypeInfo);
      }
      if (QrcodeUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QrcodeUrl);
      }
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Grpcs.Gateway.Wechat.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.HeadImg.Length != 0) {
        HeadImg = other.HeadImg;
      }
      if (other.PrincipalName.Length != 0) {
        PrincipalName = other.PrincipalName;
      }
      if (other.Alias.Length != 0) {
        Alias = other.Alias;
      }
      if (other.ServiceTypeInfo != 0) {
        ServiceTypeInfo = other.ServiceTypeInfo;
      }
      if (other.VerifyTypeInfo != 0) {
        VerifyTypeInfo = other.VerifyTypeInfo;
      }
      if (other.QrcodeUrl.Length != 0) {
        QrcodeUrl = other.QrcodeUrl;
      }
      permissions_.Add(other.permissions_);
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Grpcs.Gateway.Wechat.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            NickName = input.ReadString();
            break;
          }
          case 34: {
            HeadImg = input.ReadString();
            break;
          }
          case 42: {
            PrincipalName = input.ReadString();
            break;
          }
          case 50: {
            Alias = input.ReadString();
            break;
          }
          case 56: {
            ServiceTypeInfo = input.ReadInt32();
            break;
          }
          case 64: {
            VerifyTypeInfo = input.ReadInt32();
            break;
          }
          case 74: {
            QrcodeUrl = input.ReadString();
            break;
          }
          case 82:
          case 80: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
          case 90: {
            AppId = input.ReadString();
            break;
          }
          case 98: {
            Type = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAppIdRequest : pb::IMessage<GetAppIdRequest> {
    private static readonly pb::MessageParser<GetAppIdRequest> _parser = new pb::MessageParser<GetAppIdRequest>(() => new GetAppIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAppIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAppIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAppIdRequest(GetAppIdRequest other) : this() {
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAppIdRequest Clone() {
      return new GetAppIdRequest(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAppIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAppIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAppIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAppIdResponse : pb::IMessage<GetAppIdResponse> {
    private static readonly pb::MessageParser<GetAppIdResponse> _parser = new pb::MessageParser<GetAppIdResponse>(() => new GetAppIdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAppIdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAppIdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAppIdResponse(GetAppIdResponse other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      appId_ = other.appId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAppIdResponse Clone() {
      return new GetAppIdResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Grpcs.Gateway.Wechat.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpcs.Gateway.Wechat.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 2;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAppIdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAppIdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (AppId != other.AppId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (AppId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAppIdResponse other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Grpcs.Gateway.Wechat.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Grpcs.Gateway.Wechat.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 18: {
            AppId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///消息部分
  /// </summary>
  public sealed partial class MessageResponse : pb::IMessage<MessageResponse> {
    private static readonly pb::MessageParser<MessageResponse> _parser = new pb::MessageParser<MessageResponse>(() => new MessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageResponse(MessageResponse other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      type_ = other.type_;
      appId_ = other.appId_;
      openId_ = other.openId_;
      time_ = other.time_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageResponse Clone() {
      return new MessageResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Grpcs.Gateway.Wechat.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpcs.Gateway.Wechat.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 3;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "open_id" field.</summary>
    public const int OpenIdFieldNumber = 4;
    private string openId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OpenId {
      get { return openId_; }
      set {
        openId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 5;
    private int time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 6;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (Type != other.Type) return false;
      if (AppId != other.AppId) return false;
      if (OpenId != other.OpenId) return false;
      if (Time != other.Time) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (OpenId.Length != 0) hash ^= OpenId.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (AppId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AppId);
      }
      if (OpenId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OpenId);
      }
      if (Time != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Time);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (OpenId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OpenId);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Grpcs.Gateway.Wechat.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.OpenId.Length != 0) {
        OpenId = other.OpenId;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Grpcs.Gateway.Wechat.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            AppId = input.ReadString();
            break;
          }
          case 34: {
            OpenId = input.ReadString();
            break;
          }
          case 40: {
            Time = input.ReadInt32();
            break;
          }
          case 50: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MessageStatusRequest : pb::IMessage<MessageStatusRequest> {
    private static readonly pb::MessageParser<MessageStatusRequest> _parser = new pb::MessageParser<MessageStatusRequest>(() => new MessageStatusRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageStatusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageStatusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageStatusRequest(MessageStatusRequest other) : this() {
      messageId_ = other.messageId_;
      detail_ = other.detail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageStatusRequest Clone() {
      return new MessageStatusRequest(this);
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 1;
    private string messageId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MessageId {
      get { return messageId_; }
      set {
        messageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 2;
    private bool detail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Detail {
      get { return detail_; }
      set {
        detail_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageStatusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageStatusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageId != other.MessageId) return false;
      if (Detail != other.Detail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageId.Length != 0) hash ^= MessageId.GetHashCode();
      if (Detail != false) hash ^= Detail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MessageId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MessageId);
      }
      if (Detail != false) {
        output.WriteRawTag(16);
        output.WriteBool(Detail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageId);
      }
      if (Detail != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageStatusRequest other) {
      if (other == null) {
        return;
      }
      if (other.MessageId.Length != 0) {
        MessageId = other.MessageId;
      }
      if (other.Detail != false) {
        Detail = other.Detail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MessageId = input.ReadString();
            break;
          }
          case 16: {
            Detail = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MessageStatusResponse : pb::IMessage<MessageStatusResponse> {
    private static readonly pb::MessageParser<MessageStatusResponse> _parser = new pb::MessageParser<MessageStatusResponse>(() => new MessageStatusResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageStatusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageStatusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageStatusResponse(MessageStatusResponse other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      status_ = other.status_;
      totalNum_ = other.totalNum_;
      successNum_ = other.successNum_;
      userBlockNum_ = other.userBlockNum_;
      systemFailedNum_ = other.systemFailedNum_;
      sendErrorNum_ = other.sendErrorNum_;
      sendTime_ = other.sendTime_;
      successList_ = other.successList_.Clone();
      userBlockList_ = other.userBlockList_.Clone();
      systemFailedList_ = other.systemFailedList_.Clone();
      sendErrorList_ = other.sendErrorList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageStatusResponse Clone() {
      return new MessageStatusResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Grpcs.Gateway.Wechat.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpcs.Gateway.Wechat.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Grpcs.Gateway.Wechat.MessageStatusResponse.Types.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpcs.Gateway.Wechat.MessageStatusResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "total_num" field.</summary>
    public const int TotalNumFieldNumber = 3;
    private int totalNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalNum {
      get { return totalNum_; }
      set {
        totalNum_ = value;
      }
    }

    /// <summary>Field number for the "success_num" field.</summary>
    public const int SuccessNumFieldNumber = 4;
    private int successNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SuccessNum {
      get { return successNum_; }
      set {
        successNum_ = value;
      }
    }

    /// <summary>Field number for the "user_block_num" field.</summary>
    public const int UserBlockNumFieldNumber = 5;
    private int userBlockNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserBlockNum {
      get { return userBlockNum_; }
      set {
        userBlockNum_ = value;
      }
    }

    /// <summary>Field number for the "system_failed_num" field.</summary>
    public const int SystemFailedNumFieldNumber = 6;
    private int systemFailedNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SystemFailedNum {
      get { return systemFailedNum_; }
      set {
        systemFailedNum_ = value;
      }
    }

    /// <summary>Field number for the "send_error_num" field.</summary>
    public const int SendErrorNumFieldNumber = 7;
    private int sendErrorNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendErrorNum {
      get { return sendErrorNum_; }
      set {
        sendErrorNum_ = value;
      }
    }

    /// <summary>Field number for the "send_time" field.</summary>
    public const int SendTimeFieldNumber = 8;
    private int sendTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendTime {
      get { return sendTime_; }
      set {
        sendTime_ = value;
      }
    }

    /// <summary>Field number for the "success_list" field.</summary>
    public const int SuccessListFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_successList_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> successList_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SuccessList {
      get { return successList_; }
    }

    /// <summary>Field number for the "user_block_list" field.</summary>
    public const int UserBlockListFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_userBlockList_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> userBlockList_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> UserBlockList {
      get { return userBlockList_; }
    }

    /// <summary>Field number for the "system_failed_list" field.</summary>
    public const int SystemFailedListFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_systemFailedList_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> systemFailedList_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SystemFailedList {
      get { return systemFailedList_; }
    }

    /// <summary>Field number for the "send_error_list" field.</summary>
    public const int SendErrorListFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _repeated_sendErrorList_codec
        = pb::FieldCodec.ForString(98);
    private readonly pbc::RepeatedField<string> sendErrorList_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SendErrorList {
      get { return sendErrorList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageStatusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageStatusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (Status != other.Status) return false;
      if (TotalNum != other.TotalNum) return false;
      if (SuccessNum != other.SuccessNum) return false;
      if (UserBlockNum != other.UserBlockNum) return false;
      if (SystemFailedNum != other.SystemFailedNum) return false;
      if (SendErrorNum != other.SendErrorNum) return false;
      if (SendTime != other.SendTime) return false;
      if(!successList_.Equals(other.successList_)) return false;
      if(!userBlockList_.Equals(other.userBlockList_)) return false;
      if(!systemFailedList_.Equals(other.systemFailedList_)) return false;
      if(!sendErrorList_.Equals(other.sendErrorList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (TotalNum != 0) hash ^= TotalNum.GetHashCode();
      if (SuccessNum != 0) hash ^= SuccessNum.GetHashCode();
      if (UserBlockNum != 0) hash ^= UserBlockNum.GetHashCode();
      if (SystemFailedNum != 0) hash ^= SystemFailedNum.GetHashCode();
      if (SendErrorNum != 0) hash ^= SendErrorNum.GetHashCode();
      if (SendTime != 0) hash ^= SendTime.GetHashCode();
      hash ^= successList_.GetHashCode();
      hash ^= userBlockList_.GetHashCode();
      hash ^= systemFailedList_.GetHashCode();
      hash ^= sendErrorList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (TotalNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalNum);
      }
      if (SuccessNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SuccessNum);
      }
      if (UserBlockNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UserBlockNum);
      }
      if (SystemFailedNum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SystemFailedNum);
      }
      if (SendErrorNum != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SendErrorNum);
      }
      if (SendTime != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(SendTime);
      }
      successList_.WriteTo(output, _repeated_successList_codec);
      userBlockList_.WriteTo(output, _repeated_userBlockList_codec);
      systemFailedList_.WriteTo(output, _repeated_systemFailedList_codec);
      sendErrorList_.WriteTo(output, _repeated_sendErrorList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (TotalNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalNum);
      }
      if (SuccessNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuccessNum);
      }
      if (UserBlockNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserBlockNum);
      }
      if (SystemFailedNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SystemFailedNum);
      }
      if (SendErrorNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendErrorNum);
      }
      if (SendTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendTime);
      }
      size += successList_.CalculateSize(_repeated_successList_codec);
      size += userBlockList_.CalculateSize(_repeated_userBlockList_codec);
      size += systemFailedList_.CalculateSize(_repeated_systemFailedList_codec);
      size += sendErrorList_.CalculateSize(_repeated_sendErrorList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageStatusResponse other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Grpcs.Gateway.Wechat.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.TotalNum != 0) {
        TotalNum = other.TotalNum;
      }
      if (other.SuccessNum != 0) {
        SuccessNum = other.SuccessNum;
      }
      if (other.UserBlockNum != 0) {
        UserBlockNum = other.UserBlockNum;
      }
      if (other.SystemFailedNum != 0) {
        SystemFailedNum = other.SystemFailedNum;
      }
      if (other.SendErrorNum != 0) {
        SendErrorNum = other.SendErrorNum;
      }
      if (other.SendTime != 0) {
        SendTime = other.SendTime;
      }
      successList_.Add(other.successList_);
      userBlockList_.Add(other.userBlockList_);
      systemFailedList_.Add(other.systemFailedList_);
      sendErrorList_.Add(other.sendErrorList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Grpcs.Gateway.Wechat.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 16: {
            status_ = (global::Grpcs.Gateway.Wechat.MessageStatusResponse.Types.Status) input.ReadEnum();
            break;
          }
          case 24: {
            TotalNum = input.ReadInt32();
            break;
          }
          case 32: {
            SuccessNum = input.ReadInt32();
            break;
          }
          case 40: {
            UserBlockNum = input.ReadInt32();
            break;
          }
          case 48: {
            SystemFailedNum = input.ReadInt32();
            break;
          }
          case 56: {
            SendErrorNum = input.ReadInt32();
            break;
          }
          case 64: {
            SendTime = input.ReadInt32();
            break;
          }
          case 74: {
            successList_.AddEntriesFrom(input, _repeated_successList_codec);
            break;
          }
          case 82: {
            userBlockList_.AddEntriesFrom(input, _repeated_userBlockList_codec);
            break;
          }
          case 90: {
            systemFailedList_.AddEntriesFrom(input, _repeated_systemFailedList_codec);
            break;
          }
          case 98: {
            sendErrorList_.AddEntriesFrom(input, _repeated_sendErrorList_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the MessageStatusResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("PENDING")] Pending = 0,
        [pbr::OriginalName("PROCESSING")] Processing = 1,
        [pbr::OriginalName("FINISHED")] Finished = 2,
      }

    }
    #endregion

  }

  public sealed partial class GetTemplateResponse : pb::IMessage<GetTemplateResponse> {
    private static readonly pb::MessageParser<GetTemplateResponse> _parser = new pb::MessageParser<GetTemplateResponse>(() => new GetTemplateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTemplateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTemplateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTemplateResponse(GetTemplateResponse other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      templateList_ = other.templateList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTemplateResponse Clone() {
      return new GetTemplateResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Grpcs.Gateway.Wechat.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpcs.Gateway.Wechat.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "template_list" field.</summary>
    public const int TemplateListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Grpcs.Gateway.Wechat.GetTemplateResponse.Types.ListItem> _repeated_templateList_codec
        = pb::FieldCodec.ForMessage(18, global::Grpcs.Gateway.Wechat.GetTemplateResponse.Types.ListItem.Parser);
    private readonly pbc::RepeatedField<global::Grpcs.Gateway.Wechat.GetTemplateResponse.Types.ListItem> templateList_ = new pbc::RepeatedField<global::Grpcs.Gateway.Wechat.GetTemplateResponse.Types.ListItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpcs.Gateway.Wechat.GetTemplateResponse.Types.ListItem> TemplateList {
      get { return templateList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTemplateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTemplateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if(!templateList_.Equals(other.templateList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      hash ^= templateList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      templateList_.WriteTo(output, _repeated_templateList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      size += templateList_.CalculateSize(_repeated_templateList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTemplateResponse other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Grpcs.Gateway.Wechat.Error();
        }
        Error.MergeFrom(other.Error);
      }
      templateList_.Add(other.templateList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Grpcs.Gateway.Wechat.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 18: {
            templateList_.AddEntriesFrom(input, _repeated_templateList_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetTemplateResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ListItem : pb::IMessage<ListItem> {
        private static readonly pb::MessageParser<ListItem> _parser = new pb::MessageParser<ListItem>(() => new ListItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ListItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Grpcs.Gateway.Wechat.GetTemplateResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ListItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ListItem(ListItem other) : this() {
          templateId_ = other.templateId_;
          title_ = other.title_;
          primaryIndustry_ = other.primaryIndustry_;
          deputyIndustry_ = other.deputyIndustry_;
          content_ = other.content_;
          example_ = other.example_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ListItem Clone() {
          return new ListItem(this);
        }

        /// <summary>Field number for the "template_id" field.</summary>
        public const int TemplateIdFieldNumber = 1;
        private string templateId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TemplateId {
          get { return templateId_; }
          set {
            templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "title" field.</summary>
        public const int TitleFieldNumber = 2;
        private string title_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Title {
          get { return title_; }
          set {
            title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "primary_industry" field.</summary>
        public const int PrimaryIndustryFieldNumber = 3;
        private string primaryIndustry_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PrimaryIndustry {
          get { return primaryIndustry_; }
          set {
            primaryIndustry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "deputy_industry" field.</summary>
        public const int DeputyIndustryFieldNumber = 4;
        private string deputyIndustry_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeputyIndustry {
          get { return deputyIndustry_; }
          set {
            deputyIndustry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "content" field.</summary>
        public const int ContentFieldNumber = 5;
        private string content_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Content {
          get { return content_; }
          set {
            content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "example" field.</summary>
        public const int ExampleFieldNumber = 6;
        private string example_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Example {
          get { return example_; }
          set {
            example_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ListItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ListItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TemplateId != other.TemplateId) return false;
          if (Title != other.Title) return false;
          if (PrimaryIndustry != other.PrimaryIndustry) return false;
          if (DeputyIndustry != other.DeputyIndustry) return false;
          if (Content != other.Content) return false;
          if (Example != other.Example) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TemplateId.Length != 0) hash ^= TemplateId.GetHashCode();
          if (Title.Length != 0) hash ^= Title.GetHashCode();
          if (PrimaryIndustry.Length != 0) hash ^= PrimaryIndustry.GetHashCode();
          if (DeputyIndustry.Length != 0) hash ^= DeputyIndustry.GetHashCode();
          if (Content.Length != 0) hash ^= Content.GetHashCode();
          if (Example.Length != 0) hash ^= Example.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TemplateId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TemplateId);
          }
          if (Title.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Title);
          }
          if (PrimaryIndustry.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(PrimaryIndustry);
          }
          if (DeputyIndustry.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(DeputyIndustry);
          }
          if (Content.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Content);
          }
          if (Example.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Example);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TemplateId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
          }
          if (Title.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
          }
          if (PrimaryIndustry.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PrimaryIndustry);
          }
          if (DeputyIndustry.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeputyIndustry);
          }
          if (Content.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
          }
          if (Example.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Example);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ListItem other) {
          if (other == null) {
            return;
          }
          if (other.TemplateId.Length != 0) {
            TemplateId = other.TemplateId;
          }
          if (other.Title.Length != 0) {
            Title = other.Title;
          }
          if (other.PrimaryIndustry.Length != 0) {
            PrimaryIndustry = other.PrimaryIndustry;
          }
          if (other.DeputyIndustry.Length != 0) {
            DeputyIndustry = other.DeputyIndustry;
          }
          if (other.Content.Length != 0) {
            Content = other.Content;
          }
          if (other.Example.Length != 0) {
            Example = other.Example;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TemplateId = input.ReadString();
                break;
              }
              case 18: {
                Title = input.ReadString();
                break;
              }
              case 26: {
                PrimaryIndustry = input.ReadString();
                break;
              }
              case 34: {
                DeputyIndustry = input.ReadString();
                break;
              }
              case 42: {
                Content = input.ReadString();
                break;
              }
              case 50: {
                Example = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class TargetItem : pb::IMessage<TargetItem> {
    private static readonly pb::MessageParser<TargetItem> _parser = new pb::MessageParser<TargetItem>(() => new TargetItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TargetItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetItem(TargetItem other) : this() {
      openId_ = other.openId_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetItem Clone() {
      return new TargetItem(this);
    }

    /// <summary>Field number for the "open_id" field.</summary>
    public const int OpenIdFieldNumber = 1;
    private string openId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OpenId {
      get { return openId_; }
      set {
        openId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Grpcs.Gateway.Wechat.TargetItem.Types.Replacer> _repeated_data_codec
        = pb::FieldCodec.ForMessage(18, global::Grpcs.Gateway.Wechat.TargetItem.Types.Replacer.Parser);
    private readonly pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem.Types.Replacer> data_ = new pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem.Types.Replacer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem.Types.Replacer> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TargetItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TargetItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OpenId != other.OpenId) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OpenId.Length != 0) hash ^= OpenId.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OpenId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OpenId);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OpenId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OpenId);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TargetItem other) {
      if (other == null) {
        return;
      }
      if (other.OpenId.Length != 0) {
        OpenId = other.OpenId;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OpenId = input.ReadString();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TargetItem message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Replacer : pb::IMessage<Replacer> {
        private static readonly pb::MessageParser<Replacer> _parser = new pb::MessageParser<Replacer>(() => new Replacer());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Replacer> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Grpcs.Gateway.Wechat.TargetItem.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Replacer() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Replacer(Replacer other) : this() {
          key_ = other.key_;
          value_ = other.value_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Replacer Clone() {
          return new Replacer(this);
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;
        private string key_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Key {
          get { return key_; }
          set {
            key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private string value_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Value {
          get { return value_; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Replacer);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Replacer other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Key != other.Key) return false;
          if (Value != other.Value) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Key.Length != 0) hash ^= Key.GetHashCode();
          if (Value.Length != 0) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Key.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Key);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Key.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
          }
          if (Value.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Replacer other) {
          if (other == null) {
            return;
          }
          if (other.Key.Length != 0) {
            Key = other.Key;
          }
          if (other.Value.Length != 0) {
            Value = other.Value;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Key = input.ReadString();
                break;
              }
              case 18: {
                Value = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class SendTemplateRequest : pb::IMessage<SendTemplateRequest> {
    private static readonly pb::MessageParser<SendTemplateRequest> _parser = new pb::MessageParser<SendTemplateRequest>(() => new SendTemplateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendTemplateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendTemplateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendTemplateRequest(SendTemplateRequest other) : this() {
      appId_ = other.appId_;
      targets_ = other.targets_.Clone();
      templateId_ = other.templateId_;
      formId_ = other.formId_;
      url_ = other.url_;
      data_ = other.data_.Clone();
      time_ = other.time_;
      noStatus_ = other.noStatus_;
      highPriority_ = other.highPriority_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendTemplateRequest Clone() {
      return new SendTemplateRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Grpcs.Gateway.Wechat.TargetItem> _repeated_targets_codec
        = pb::FieldCodec.ForMessage(18, global::Grpcs.Gateway.Wechat.TargetItem.Parser);
    private readonly pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem> targets_ = new pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem> Targets {
      get { return targets_; }
    }

    /// <summary>Field number for the "template_id" field.</summary>
    public const int TemplateIdFieldNumber = 3;
    private string templateId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TemplateId {
      get { return templateId_; }
      set {
        templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "form_id" field.</summary>
    public const int FormIdFieldNumber = 4;
    private string formId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormId {
      get { return formId_; }
      set {
        formId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 5;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Grpcs.Gateway.Wechat.SendTemplateRequest.Types.DataItem> _repeated_data_codec
        = pb::FieldCodec.ForMessage(50, global::Grpcs.Gateway.Wechat.SendTemplateRequest.Types.DataItem.Parser);
    private readonly pbc::RepeatedField<global::Grpcs.Gateway.Wechat.SendTemplateRequest.Types.DataItem> data_ = new pbc::RepeatedField<global::Grpcs.Gateway.Wechat.SendTemplateRequest.Types.DataItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpcs.Gateway.Wechat.SendTemplateRequest.Types.DataItem> Data {
      get { return data_; }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 7;
    private int time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "no_status" field.</summary>
    public const int NoStatusFieldNumber = 8;
    private bool noStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NoStatus {
      get { return noStatus_; }
      set {
        noStatus_ = value;
      }
    }

    /// <summary>Field number for the "high_priority" field.</summary>
    public const int HighPriorityFieldNumber = 9;
    private bool highPriority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HighPriority {
      get { return highPriority_; }
      set {
        highPriority_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendTemplateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendTemplateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if(!targets_.Equals(other.targets_)) return false;
      if (TemplateId != other.TemplateId) return false;
      if (FormId != other.FormId) return false;
      if (Url != other.Url) return false;
      if(!data_.Equals(other.data_)) return false;
      if (Time != other.Time) return false;
      if (NoStatus != other.NoStatus) return false;
      if (HighPriority != other.HighPriority) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      hash ^= targets_.GetHashCode();
      if (TemplateId.Length != 0) hash ^= TemplateId.GetHashCode();
      if (FormId.Length != 0) hash ^= FormId.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      hash ^= data_.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (NoStatus != false) hash ^= NoStatus.GetHashCode();
      if (HighPriority != false) hash ^= HighPriority.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      targets_.WriteTo(output, _repeated_targets_codec);
      if (TemplateId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TemplateId);
      }
      if (FormId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FormId);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Url);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (Time != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Time);
      }
      if (NoStatus != false) {
        output.WriteRawTag(64);
        output.WriteBool(NoStatus);
      }
      if (HighPriority != false) {
        output.WriteRawTag(72);
        output.WriteBool(HighPriority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      size += targets_.CalculateSize(_repeated_targets_codec);
      if (TemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
      }
      if (FormId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormId);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (NoStatus != false) {
        size += 1 + 1;
      }
      if (HighPriority != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendTemplateRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      targets_.Add(other.targets_);
      if (other.TemplateId.Length != 0) {
        TemplateId = other.TemplateId;
      }
      if (other.FormId.Length != 0) {
        FormId = other.FormId;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      data_.Add(other.data_);
      if (other.Time != 0) {
        Time = other.Time;
      }
      if (other.NoStatus != false) {
        NoStatus = other.NoStatus;
      }
      if (other.HighPriority != false) {
        HighPriority = other.HighPriority;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            targets_.AddEntriesFrom(input, _repeated_targets_codec);
            break;
          }
          case 26: {
            TemplateId = input.ReadString();
            break;
          }
          case 34: {
            FormId = input.ReadString();
            break;
          }
          case 42: {
            Url = input.ReadString();
            break;
          }
          case 50: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
          case 56: {
            Time = input.ReadInt32();
            break;
          }
          case 64: {
            NoStatus = input.ReadBool();
            break;
          }
          case 72: {
            HighPriority = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SendTemplateRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class DataItem : pb::IMessage<DataItem> {
        private static readonly pb::MessageParser<DataItem> _parser = new pb::MessageParser<DataItem>(() => new DataItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DataItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Grpcs.Gateway.Wechat.SendTemplateRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataItem(DataItem other) : this() {
          key_ = other.key_;
          value_ = other.value_;
          color_ = other.color_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataItem Clone() {
          return new DataItem(this);
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;
        private string key_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Key {
          get { return key_; }
          set {
            key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private string value_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Value {
          get { return value_; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "color" field.</summary>
        public const int ColorFieldNumber = 3;
        private string color_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Color {
          get { return color_; }
          set {
            color_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DataItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DataItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Key != other.Key) return false;
          if (Value != other.Value) return false;
          if (Color != other.Color) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Key.Length != 0) hash ^= Key.GetHashCode();
          if (Value.Length != 0) hash ^= Value.GetHashCode();
          if (Color.Length != 0) hash ^= Color.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Key.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Key);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Value);
          }
          if (Color.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Color);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Key.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
          }
          if (Value.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
          }
          if (Color.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Color);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DataItem other) {
          if (other == null) {
            return;
          }
          if (other.Key.Length != 0) {
            Key = other.Key;
          }
          if (other.Value.Length != 0) {
            Value = other.Value;
          }
          if (other.Color.Length != 0) {
            Color = other.Color;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Key = input.ReadString();
                break;
              }
              case 18: {
                Value = input.ReadString();
                break;
              }
              case 26: {
                Color = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class SendTextRequest : pb::IMessage<SendTextRequest> {
    private static readonly pb::MessageParser<SendTextRequest> _parser = new pb::MessageParser<SendTextRequest>(() => new SendTextRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendTextRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendTextRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendTextRequest(SendTextRequest other) : this() {
      appId_ = other.appId_;
      targets_ = other.targets_.Clone();
      content_ = other.content_;
      time_ = other.time_;
      noStatus_ = other.noStatus_;
      highPriority_ = other.highPriority_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendTextRequest Clone() {
      return new SendTextRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Grpcs.Gateway.Wechat.TargetItem> _repeated_targets_codec
        = pb::FieldCodec.ForMessage(18, global::Grpcs.Gateway.Wechat.TargetItem.Parser);
    private readonly pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem> targets_ = new pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem> Targets {
      get { return targets_; }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 3;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 4;
    private int time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "no_status" field.</summary>
    public const int NoStatusFieldNumber = 5;
    private bool noStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NoStatus {
      get { return noStatus_; }
      set {
        noStatus_ = value;
      }
    }

    /// <summary>Field number for the "high_priority" field.</summary>
    public const int HighPriorityFieldNumber = 6;
    private bool highPriority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HighPriority {
      get { return highPriority_; }
      set {
        highPriority_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendTextRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendTextRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if(!targets_.Equals(other.targets_)) return false;
      if (Content != other.Content) return false;
      if (Time != other.Time) return false;
      if (NoStatus != other.NoStatus) return false;
      if (HighPriority != other.HighPriority) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      hash ^= targets_.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (NoStatus != false) hash ^= NoStatus.GetHashCode();
      if (HighPriority != false) hash ^= HighPriority.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      targets_.WriteTo(output, _repeated_targets_codec);
      if (Content.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Content);
      }
      if (Time != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Time);
      }
      if (NoStatus != false) {
        output.WriteRawTag(40);
        output.WriteBool(NoStatus);
      }
      if (HighPriority != false) {
        output.WriteRawTag(48);
        output.WriteBool(HighPriority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      size += targets_.CalculateSize(_repeated_targets_codec);
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (NoStatus != false) {
        size += 1 + 1;
      }
      if (HighPriority != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendTextRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      targets_.Add(other.targets_);
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      if (other.NoStatus != false) {
        NoStatus = other.NoStatus;
      }
      if (other.HighPriority != false) {
        HighPriority = other.HighPriority;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            targets_.AddEntriesFrom(input, _repeated_targets_codec);
            break;
          }
          case 26: {
            Content = input.ReadString();
            break;
          }
          case 32: {
            Time = input.ReadInt32();
            break;
          }
          case 40: {
            NoStatus = input.ReadBool();
            break;
          }
          case 48: {
            HighPriority = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendImageRequest : pb::IMessage<SendImageRequest> {
    private static readonly pb::MessageParser<SendImageRequest> _parser = new pb::MessageParser<SendImageRequest>(() => new SendImageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendImageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendImageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendImageRequest(SendImageRequest other) : this() {
      appId_ = other.appId_;
      targets_ = other.targets_.Clone();
      imageId_ = other.imageId_;
      time_ = other.time_;
      noStatus_ = other.noStatus_;
      highPriority_ = other.highPriority_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendImageRequest Clone() {
      return new SendImageRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Grpcs.Gateway.Wechat.TargetItem> _repeated_targets_codec
        = pb::FieldCodec.ForMessage(18, global::Grpcs.Gateway.Wechat.TargetItem.Parser);
    private readonly pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem> targets_ = new pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem> Targets {
      get { return targets_; }
    }

    /// <summary>Field number for the "image_id" field.</summary>
    public const int ImageIdFieldNumber = 3;
    private string imageId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageId {
      get { return imageId_; }
      set {
        imageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 4;
    private int time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "no_status" field.</summary>
    public const int NoStatusFieldNumber = 5;
    private bool noStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NoStatus {
      get { return noStatus_; }
      set {
        noStatus_ = value;
      }
    }

    /// <summary>Field number for the "high_priority" field.</summary>
    public const int HighPriorityFieldNumber = 6;
    private bool highPriority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HighPriority {
      get { return highPriority_; }
      set {
        highPriority_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendImageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendImageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if(!targets_.Equals(other.targets_)) return false;
      if (ImageId != other.ImageId) return false;
      if (Time != other.Time) return false;
      if (NoStatus != other.NoStatus) return false;
      if (HighPriority != other.HighPriority) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      hash ^= targets_.GetHashCode();
      if (ImageId.Length != 0) hash ^= ImageId.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (NoStatus != false) hash ^= NoStatus.GetHashCode();
      if (HighPriority != false) hash ^= HighPriority.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      targets_.WriteTo(output, _repeated_targets_codec);
      if (ImageId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ImageId);
      }
      if (Time != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Time);
      }
      if (NoStatus != false) {
        output.WriteRawTag(40);
        output.WriteBool(NoStatus);
      }
      if (HighPriority != false) {
        output.WriteRawTag(48);
        output.WriteBool(HighPriority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      size += targets_.CalculateSize(_repeated_targets_codec);
      if (ImageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageId);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (NoStatus != false) {
        size += 1 + 1;
      }
      if (HighPriority != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendImageRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      targets_.Add(other.targets_);
      if (other.ImageId.Length != 0) {
        ImageId = other.ImageId;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      if (other.NoStatus != false) {
        NoStatus = other.NoStatus;
      }
      if (other.HighPriority != false) {
        HighPriority = other.HighPriority;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            targets_.AddEntriesFrom(input, _repeated_targets_codec);
            break;
          }
          case 26: {
            ImageId = input.ReadString();
            break;
          }
          case 32: {
            Time = input.ReadInt32();
            break;
          }
          case 40: {
            NoStatus = input.ReadBool();
            break;
          }
          case 48: {
            HighPriority = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendNewsRequest : pb::IMessage<SendNewsRequest> {
    private static readonly pb::MessageParser<SendNewsRequest> _parser = new pb::MessageParser<SendNewsRequest>(() => new SendNewsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendNewsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendNewsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendNewsRequest(SendNewsRequest other) : this() {
      appId_ = other.appId_;
      targets_ = other.targets_.Clone();
      image_ = other.image_;
      title_ = other.title_;
      description_ = other.description_;
      link_ = other.link_;
      time_ = other.time_;
      noStatus_ = other.noStatus_;
      highPriority_ = other.highPriority_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendNewsRequest Clone() {
      return new SendNewsRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Grpcs.Gateway.Wechat.TargetItem> _repeated_targets_codec
        = pb::FieldCodec.ForMessage(18, global::Grpcs.Gateway.Wechat.TargetItem.Parser);
    private readonly pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem> targets_ = new pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem> Targets {
      get { return targets_; }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 3;
    private string image_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 4;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "link" field.</summary>
    public const int LinkFieldNumber = 6;
    private string link_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Link {
      get { return link_; }
      set {
        link_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 7;
    private int time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "no_status" field.</summary>
    public const int NoStatusFieldNumber = 8;
    private bool noStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NoStatus {
      get { return noStatus_; }
      set {
        noStatus_ = value;
      }
    }

    /// <summary>Field number for the "high_priority" field.</summary>
    public const int HighPriorityFieldNumber = 9;
    private bool highPriority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HighPriority {
      get { return highPriority_; }
      set {
        highPriority_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendNewsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendNewsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if(!targets_.Equals(other.targets_)) return false;
      if (Image != other.Image) return false;
      if (Title != other.Title) return false;
      if (Description != other.Description) return false;
      if (Link != other.Link) return false;
      if (Time != other.Time) return false;
      if (NoStatus != other.NoStatus) return false;
      if (HighPriority != other.HighPriority) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      hash ^= targets_.GetHashCode();
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Link.Length != 0) hash ^= Link.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (NoStatus != false) hash ^= NoStatus.GetHashCode();
      if (HighPriority != false) hash ^= HighPriority.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      targets_.WriteTo(output, _repeated_targets_codec);
      if (Image.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Image);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (Link.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Link);
      }
      if (Time != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Time);
      }
      if (NoStatus != false) {
        output.WriteRawTag(64);
        output.WriteBool(NoStatus);
      }
      if (HighPriority != false) {
        output.WriteRawTag(72);
        output.WriteBool(HighPriority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      size += targets_.CalculateSize(_repeated_targets_codec);
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Link.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Link);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (NoStatus != false) {
        size += 1 + 1;
      }
      if (HighPriority != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendNewsRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      targets_.Add(other.targets_);
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Link.Length != 0) {
        Link = other.Link;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      if (other.NoStatus != false) {
        NoStatus = other.NoStatus;
      }
      if (other.HighPriority != false) {
        HighPriority = other.HighPriority;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            targets_.AddEntriesFrom(input, _repeated_targets_codec);
            break;
          }
          case 26: {
            Image = input.ReadString();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            Link = input.ReadString();
            break;
          }
          case 56: {
            Time = input.ReadInt32();
            break;
          }
          case 64: {
            NoStatus = input.ReadBool();
            break;
          }
          case 72: {
            HighPriority = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendWxAppCardRequest : pb::IMessage<SendWxAppCardRequest> {
    private static readonly pb::MessageParser<SendWxAppCardRequest> _parser = new pb::MessageParser<SendWxAppCardRequest>(() => new SendWxAppCardRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendWxAppCardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendWxAppCardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendWxAppCardRequest(SendWxAppCardRequest other) : this() {
      appId_ = other.appId_;
      targets_ = other.targets_.Clone();
      title_ = other.title_;
      wxAppId_ = other.wxAppId_;
      pagePath_ = other.pagePath_;
      imageId_ = other.imageId_;
      time_ = other.time_;
      noStatus_ = other.noStatus_;
      highPriority_ = other.highPriority_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendWxAppCardRequest Clone() {
      return new SendWxAppCardRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Grpcs.Gateway.Wechat.TargetItem> _repeated_targets_codec
        = pb::FieldCodec.ForMessage(18, global::Grpcs.Gateway.Wechat.TargetItem.Parser);
    private readonly pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem> targets_ = new pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpcs.Gateway.Wechat.TargetItem> Targets {
      get { return targets_; }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "wx_app_id" field.</summary>
    public const int WxAppIdFieldNumber = 4;
    private string wxAppId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WxAppId {
      get { return wxAppId_; }
      set {
        wxAppId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_path" field.</summary>
    public const int PagePathFieldNumber = 5;
    private string pagePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PagePath {
      get { return pagePath_; }
      set {
        pagePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_id" field.</summary>
    public const int ImageIdFieldNumber = 6;
    private string imageId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageId {
      get { return imageId_; }
      set {
        imageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 7;
    private int time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "no_status" field.</summary>
    public const int NoStatusFieldNumber = 8;
    private bool noStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NoStatus {
      get { return noStatus_; }
      set {
        noStatus_ = value;
      }
    }

    /// <summary>Field number for the "high_priority" field.</summary>
    public const int HighPriorityFieldNumber = 9;
    private bool highPriority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HighPriority {
      get { return highPriority_; }
      set {
        highPriority_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendWxAppCardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendWxAppCardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if(!targets_.Equals(other.targets_)) return false;
      if (Title != other.Title) return false;
      if (WxAppId != other.WxAppId) return false;
      if (PagePath != other.PagePath) return false;
      if (ImageId != other.ImageId) return false;
      if (Time != other.Time) return false;
      if (NoStatus != other.NoStatus) return false;
      if (HighPriority != other.HighPriority) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      hash ^= targets_.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (WxAppId.Length != 0) hash ^= WxAppId.GetHashCode();
      if (PagePath.Length != 0) hash ^= PagePath.GetHashCode();
      if (ImageId.Length != 0) hash ^= ImageId.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (NoStatus != false) hash ^= NoStatus.GetHashCode();
      if (HighPriority != false) hash ^= HighPriority.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      targets_.WriteTo(output, _repeated_targets_codec);
      if (Title.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (WxAppId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(WxAppId);
      }
      if (PagePath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PagePath);
      }
      if (ImageId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ImageId);
      }
      if (Time != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Time);
      }
      if (NoStatus != false) {
        output.WriteRawTag(64);
        output.WriteBool(NoStatus);
      }
      if (HighPriority != false) {
        output.WriteRawTag(72);
        output.WriteBool(HighPriority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      size += targets_.CalculateSize(_repeated_targets_codec);
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (WxAppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WxAppId);
      }
      if (PagePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PagePath);
      }
      if (ImageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageId);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (NoStatus != false) {
        size += 1 + 1;
      }
      if (HighPriority != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendWxAppCardRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      targets_.Add(other.targets_);
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.WxAppId.Length != 0) {
        WxAppId = other.WxAppId;
      }
      if (other.PagePath.Length != 0) {
        PagePath = other.PagePath;
      }
      if (other.ImageId.Length != 0) {
        ImageId = other.ImageId;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      if (other.NoStatus != false) {
        NoStatus = other.NoStatus;
      }
      if (other.HighPriority != false) {
        HighPriority = other.HighPriority;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            targets_.AddEntriesFrom(input, _repeated_targets_codec);
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            WxAppId = input.ReadString();
            break;
          }
          case 42: {
            PagePath = input.ReadString();
            break;
          }
          case 50: {
            ImageId = input.ReadString();
            break;
          }
          case 56: {
            Time = input.ReadInt32();
            break;
          }
          case 64: {
            NoStatus = input.ReadBool();
            break;
          }
          case 72: {
            HighPriority = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendMessageResponse : pb::IMessage<SendMessageResponse> {
    private static readonly pb::MessageParser<SendMessageResponse> _parser = new pb::MessageParser<SendMessageResponse>(() => new SendMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageResponse(SendMessageResponse other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      messageId_ = other.messageId_;
      sendTime_ = other.sendTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageResponse Clone() {
      return new SendMessageResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Grpcs.Gateway.Wechat.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpcs.Gateway.Wechat.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 2;
    private string messageId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MessageId {
      get { return messageId_; }
      set {
        messageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "send_time" field.</summary>
    public const int SendTimeFieldNumber = 3;
    private int sendTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendTime {
      get { return sendTime_; }
      set {
        sendTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (MessageId != other.MessageId) return false;
      if (SendTime != other.SendTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (MessageId.Length != 0) hash ^= MessageId.GetHashCode();
      if (SendTime != 0) hash ^= SendTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (MessageId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MessageId);
      }
      if (SendTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SendTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (MessageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageId);
      }
      if (SendTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Grpcs.Gateway.Wechat.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.MessageId.Length != 0) {
        MessageId = other.MessageId;
      }
      if (other.SendTime != 0) {
        SendTime = other.SendTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Grpcs.Gateway.Wechat.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 18: {
            MessageId = input.ReadString();
            break;
          }
          case 24: {
            SendTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///WxApp部分
  /// </summary>
  public sealed partial class SetServiceDomainRequest : pb::IMessage<SetServiceDomainRequest> {
    private static readonly pb::MessageParser<SetServiceDomainRequest> _parser = new pb::MessageParser<SetServiceDomainRequest>(() => new SetServiceDomainRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetServiceDomainRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetServiceDomainRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetServiceDomainRequest(SetServiceDomainRequest other) : this() {
      appId_ = other.appId_;
      requestDomain_ = other.requestDomain_.Clone();
      wsRequestDomain_ = other.wsRequestDomain_.Clone();
      uploadDomain_ = other.uploadDomain_.Clone();
      downloaddomainDomain_ = other.downloaddomainDomain_.Clone();
      webviewDomain_ = other.webviewDomain_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetServiceDomainRequest Clone() {
      return new SetServiceDomainRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_domain" field.</summary>
    public const int RequestDomainFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_requestDomain_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> requestDomain_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RequestDomain {
      get { return requestDomain_; }
    }

    /// <summary>Field number for the "ws_request_domain" field.</summary>
    public const int WsRequestDomainFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_wsRequestDomain_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> wsRequestDomain_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> WsRequestDomain {
      get { return wsRequestDomain_; }
    }

    /// <summary>Field number for the "upload_domain" field.</summary>
    public const int UploadDomainFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_uploadDomain_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> uploadDomain_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> UploadDomain {
      get { return uploadDomain_; }
    }

    /// <summary>Field number for the "downloaddomain_domain" field.</summary>
    public const int DownloaddomainDomainFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_downloaddomainDomain_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> downloaddomainDomain_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DownloaddomainDomain {
      get { return downloaddomainDomain_; }
    }

    /// <summary>Field number for the "webview_domain" field.</summary>
    public const int WebviewDomainFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_webviewDomain_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> webviewDomain_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> WebviewDomain {
      get { return webviewDomain_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetServiceDomainRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetServiceDomainRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if(!requestDomain_.Equals(other.requestDomain_)) return false;
      if(!wsRequestDomain_.Equals(other.wsRequestDomain_)) return false;
      if(!uploadDomain_.Equals(other.uploadDomain_)) return false;
      if(!downloaddomainDomain_.Equals(other.downloaddomainDomain_)) return false;
      if(!webviewDomain_.Equals(other.webviewDomain_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      hash ^= requestDomain_.GetHashCode();
      hash ^= wsRequestDomain_.GetHashCode();
      hash ^= uploadDomain_.GetHashCode();
      hash ^= downloaddomainDomain_.GetHashCode();
      hash ^= webviewDomain_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      requestDomain_.WriteTo(output, _repeated_requestDomain_codec);
      wsRequestDomain_.WriteTo(output, _repeated_wsRequestDomain_codec);
      uploadDomain_.WriteTo(output, _repeated_uploadDomain_codec);
      downloaddomainDomain_.WriteTo(output, _repeated_downloaddomainDomain_codec);
      webviewDomain_.WriteTo(output, _repeated_webviewDomain_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      size += requestDomain_.CalculateSize(_repeated_requestDomain_codec);
      size += wsRequestDomain_.CalculateSize(_repeated_wsRequestDomain_codec);
      size += uploadDomain_.CalculateSize(_repeated_uploadDomain_codec);
      size += downloaddomainDomain_.CalculateSize(_repeated_downloaddomainDomain_codec);
      size += webviewDomain_.CalculateSize(_repeated_webviewDomain_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetServiceDomainRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      requestDomain_.Add(other.requestDomain_);
      wsRequestDomain_.Add(other.wsRequestDomain_);
      uploadDomain_.Add(other.uploadDomain_);
      downloaddomainDomain_.Add(other.downloaddomainDomain_);
      webviewDomain_.Add(other.webviewDomain_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            requestDomain_.AddEntriesFrom(input, _repeated_requestDomain_codec);
            break;
          }
          case 26: {
            wsRequestDomain_.AddEntriesFrom(input, _repeated_wsRequestDomain_codec);
            break;
          }
          case 34: {
            uploadDomain_.AddEntriesFrom(input, _repeated_uploadDomain_codec);
            break;
          }
          case 42: {
            downloaddomainDomain_.AddEntriesFrom(input, _repeated_downloaddomainDomain_codec);
            break;
          }
          case 50: {
            webviewDomain_.AddEntriesFrom(input, _repeated_webviewDomain_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeployRequest : pb::IMessage<DeployRequest> {
    private static readonly pb::MessageParser<DeployRequest> _parser = new pb::MessageParser<DeployRequest>(() => new DeployRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployRequest(DeployRequest other) : this() {
      appId_ = other.appId_;
      templateId_ = other.templateId_;
      userVersion_ = other.userVersion_;
      userDesc_ = other.userDesc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployRequest Clone() {
      return new DeployRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "template_id" field.</summary>
    public const int TemplateIdFieldNumber = 2;
    private int templateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TemplateId {
      get { return templateId_; }
      set {
        templateId_ = value;
      }
    }

    /// <summary>Field number for the "user_version" field.</summary>
    public const int UserVersionFieldNumber = 3;
    private string userVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserVersion {
      get { return userVersion_; }
      set {
        userVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_desc" field.</summary>
    public const int UserDescFieldNumber = 4;
    private string userDesc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserDesc {
      get { return userDesc_; }
      set {
        userDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (TemplateId != other.TemplateId) return false;
      if (UserVersion != other.UserVersion) return false;
      if (UserDesc != other.UserDesc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (TemplateId != 0) hash ^= TemplateId.GetHashCode();
      if (UserVersion.Length != 0) hash ^= UserVersion.GetHashCode();
      if (UserDesc.Length != 0) hash ^= UserDesc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (TemplateId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TemplateId);
      }
      if (UserVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserVersion);
      }
      if (UserDesc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserDesc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (TemplateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TemplateId);
      }
      if (UserVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserVersion);
      }
      if (UserDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserDesc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.TemplateId != 0) {
        TemplateId = other.TemplateId;
      }
      if (other.UserVersion.Length != 0) {
        UserVersion = other.UserVersion;
      }
      if (other.UserDesc.Length != 0) {
        UserDesc = other.UserDesc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 16: {
            TemplateId = input.ReadInt32();
            break;
          }
          case 26: {
            UserVersion = input.ReadString();
            break;
          }
          case 34: {
            UserDesc = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///WxWeb部分
  /// </summary>
  public sealed partial class GetOpenIdByCodeRequest : pb::IMessage<GetOpenIdByCodeRequest> {
    private static readonly pb::MessageParser<GetOpenIdByCodeRequest> _parser = new pb::MessageParser<GetOpenIdByCodeRequest>(() => new GetOpenIdByCodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOpenIdByCodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOpenIdByCodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOpenIdByCodeRequest(GetOpenIdByCodeRequest other) : this() {
      appId_ = other.appId_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOpenIdByCodeRequest Clone() {
      return new GetOpenIdByCodeRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOpenIdByCodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOpenIdByCodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOpenIdByCodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetOpenIdByCodeResponse : pb::IMessage<GetOpenIdByCodeResponse> {
    private static readonly pb::MessageParser<GetOpenIdByCodeResponse> _parser = new pb::MessageParser<GetOpenIdByCodeResponse>(() => new GetOpenIdByCodeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOpenIdByCodeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOpenIdByCodeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOpenIdByCodeResponse(GetOpenIdByCodeResponse other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      openId_ = other.openId_;
      secretKey_ = other.secretKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOpenIdByCodeResponse Clone() {
      return new GetOpenIdByCodeResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Grpcs.Gateway.Wechat.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpcs.Gateway.Wechat.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "open_id" field.</summary>
    public const int OpenIdFieldNumber = 2;
    private string openId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OpenId {
      get { return openId_; }
      set {
        openId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret_key" field.</summary>
    public const int SecretKeyFieldNumber = 3;
    private string secretKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecretKey {
      get { return secretKey_; }
      set {
        secretKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOpenIdByCodeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOpenIdByCodeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (OpenId != other.OpenId) return false;
      if (SecretKey != other.SecretKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (OpenId.Length != 0) hash ^= OpenId.GetHashCode();
      if (SecretKey.Length != 0) hash ^= SecretKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (OpenId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OpenId);
      }
      if (SecretKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SecretKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (OpenId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OpenId);
      }
      if (SecretKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecretKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOpenIdByCodeResponse other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Grpcs.Gateway.Wechat.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.OpenId.Length != 0) {
        OpenId = other.OpenId;
      }
      if (other.SecretKey.Length != 0) {
        SecretKey = other.SecretKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Grpcs.Gateway.Wechat.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 18: {
            OpenId = input.ReadString();
            break;
          }
          case 26: {
            SecretKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUserInfoRequest : pb::IMessage<GetUserInfoRequest> {
    private static readonly pb::MessageParser<GetUserInfoRequest> _parser = new pb::MessageParser<GetUserInfoRequest>(() => new GetUserInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserInfoRequest(GetUserInfoRequest other) : this() {
      appId_ = other.appId_;
      openId_ = other.openId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserInfoRequest Clone() {
      return new GetUserInfoRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "open_id" field.</summary>
    public const int OpenIdFieldNumber = 2;
    private string openId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OpenId {
      get { return openId_; }
      set {
        openId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (OpenId != other.OpenId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (OpenId.Length != 0) hash ^= OpenId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (OpenId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OpenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (OpenId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OpenId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.OpenId.Length != 0) {
        OpenId = other.OpenId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            OpenId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUserInfoResponse : pb::IMessage<GetUserInfoResponse> {
    private static readonly pb::MessageParser<GetUserInfoResponse> _parser = new pb::MessageParser<GetUserInfoResponse>(() => new GetUserInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserInfoResponse(GetUserInfoResponse other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      subscribeTime_ = other.subscribeTime_;
      openId_ = other.openId_;
      nickName_ = other.nickName_;
      sex_ = other.sex_;
      country_ = other.country_;
      province_ = other.province_;
      city_ = other.city_;
      photo_ = other.photo_;
      unionId_ = other.unionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserInfoResponse Clone() {
      return new GetUserInfoResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Grpcs.Gateway.Wechat.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpcs.Gateway.Wechat.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "subscribe_time" field.</summary>
    public const int SubscribeTimeFieldNumber = 2;
    private int subscribeTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubscribeTime {
      get { return subscribeTime_; }
      set {
        subscribeTime_ = value;
      }
    }

    /// <summary>Field number for the "open_id" field.</summary>
    public const int OpenIdFieldNumber = 3;
    private string openId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OpenId {
      get { return openId_; }
      set {
        openId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nick_name" field.</summary>
    public const int NickNameFieldNumber = 4;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sex" field.</summary>
    public const int SexFieldNumber = 5;
    private int sex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 6;
    private string country_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "province" field.</summary>
    public const int ProvinceFieldNumber = 7;
    private string province_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Province {
      get { return province_; }
      set {
        province_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 8;
    private string city_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "photo" field.</summary>
    public const int PhotoFieldNumber = 9;
    private string photo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Photo {
      get { return photo_; }
      set {
        photo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "union_id" field.</summary>
    public const int UnionIdFieldNumber = 10;
    private string unionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnionId {
      get { return unionId_; }
      set {
        unionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (SubscribeTime != other.SubscribeTime) return false;
      if (OpenId != other.OpenId) return false;
      if (NickName != other.NickName) return false;
      if (Sex != other.Sex) return false;
      if (Country != other.Country) return false;
      if (Province != other.Province) return false;
      if (City != other.City) return false;
      if (Photo != other.Photo) return false;
      if (UnionId != other.UnionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (SubscribeTime != 0) hash ^= SubscribeTime.GetHashCode();
      if (OpenId.Length != 0) hash ^= OpenId.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (Sex != 0) hash ^= Sex.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (Province.Length != 0) hash ^= Province.GetHashCode();
      if (City.Length != 0) hash ^= City.GetHashCode();
      if (Photo.Length != 0) hash ^= Photo.GetHashCode();
      if (UnionId.Length != 0) hash ^= UnionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (SubscribeTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubscribeTime);
      }
      if (OpenId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OpenId);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NickName);
      }
      if (Sex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Sex);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Country);
      }
      if (Province.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Province);
      }
      if (City.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(City);
      }
      if (Photo.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Photo);
      }
      if (UnionId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(UnionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (SubscribeTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubscribeTime);
      }
      if (OpenId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OpenId);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (Sex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (Province.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Province);
      }
      if (City.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
      }
      if (Photo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Photo);
      }
      if (UnionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Grpcs.Gateway.Wechat.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.SubscribeTime != 0) {
        SubscribeTime = other.SubscribeTime;
      }
      if (other.OpenId.Length != 0) {
        OpenId = other.OpenId;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.Sex != 0) {
        Sex = other.Sex;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.Province.Length != 0) {
        Province = other.Province;
      }
      if (other.City.Length != 0) {
        City = other.City;
      }
      if (other.Photo.Length != 0) {
        Photo = other.Photo;
      }
      if (other.UnionId.Length != 0) {
        UnionId = other.UnionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Grpcs.Gateway.Wechat.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 16: {
            SubscribeTime = input.ReadInt32();
            break;
          }
          case 26: {
            OpenId = input.ReadString();
            break;
          }
          case 34: {
            NickName = input.ReadString();
            break;
          }
          case 40: {
            Sex = input.ReadInt32();
            break;
          }
          case 50: {
            Country = input.ReadString();
            break;
          }
          case 58: {
            Province = input.ReadString();
            break;
          }
          case 66: {
            City = input.ReadString();
            break;
          }
          case 74: {
            Photo = input.ReadString();
            break;
          }
          case 82: {
            UnionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateMenuRequest : pb::IMessage<CreateMenuRequest> {
    private static readonly pb::MessageParser<CreateMenuRequest> _parser = new pb::MessageParser<CreateMenuRequest>(() => new CreateMenuRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateMenuRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMenuRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMenuRequest(CreateMenuRequest other) : this() {
      appId_ = other.appId_;
      config_ = other.config_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMenuRequest Clone() {
      return new CreateMenuRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private string config_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Config {
      get { return config_; }
      set {
        config_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateMenuRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateMenuRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (Config != other.Config) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (Config.Length != 0) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (Config.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (Config.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateMenuRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.Config.Length != 0) {
        Config = other.Config;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            Config = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAuthCodeUrlRequest : pb::IMessage<GetAuthCodeUrlRequest> {
    private static readonly pb::MessageParser<GetAuthCodeUrlRequest> _parser = new pb::MessageParser<GetAuthCodeUrlRequest>(() => new GetAuthCodeUrlRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAuthCodeUrlRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthCodeUrlRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthCodeUrlRequest(GetAuthCodeUrlRequest other) : this() {
      appId_ = other.appId_;
      redirectUrl_ = other.redirectUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthCodeUrlRequest Clone() {
      return new GetAuthCodeUrlRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "redirect_url" field.</summary>
    public const int RedirectUrlFieldNumber = 2;
    private string redirectUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RedirectUrl {
      get { return redirectUrl_; }
      set {
        redirectUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAuthCodeUrlRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAuthCodeUrlRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (RedirectUrl != other.RedirectUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (RedirectUrl.Length != 0) hash ^= RedirectUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (RedirectUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RedirectUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (RedirectUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedirectUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAuthCodeUrlRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.RedirectUrl.Length != 0) {
        RedirectUrl = other.RedirectUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            RedirectUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAuthCodeUrlResponse : pb::IMessage<GetAuthCodeUrlResponse> {
    private static readonly pb::MessageParser<GetAuthCodeUrlResponse> _parser = new pb::MessageParser<GetAuthCodeUrlResponse>(() => new GetAuthCodeUrlResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAuthCodeUrlResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthCodeUrlResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthCodeUrlResponse(GetAuthCodeUrlResponse other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthCodeUrlResponse Clone() {
      return new GetAuthCodeUrlResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Grpcs.Gateway.Wechat.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpcs.Gateway.Wechat.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAuthCodeUrlResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAuthCodeUrlResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAuthCodeUrlResponse other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Grpcs.Gateway.Wechat.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Grpcs.Gateway.Wechat.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetJsTicketRequest : pb::IMessage<GetJsTicketRequest> {
    private static readonly pb::MessageParser<GetJsTicketRequest> _parser = new pb::MessageParser<GetJsTicketRequest>(() => new GetJsTicketRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetJsTicketRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetJsTicketRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetJsTicketRequest(GetJsTicketRequest other) : this() {
      appId_ = other.appId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetJsTicketRequest Clone() {
      return new GetJsTicketRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetJsTicketRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetJsTicketRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetJsTicketRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetJsTicketResponse : pb::IMessage<GetJsTicketResponse> {
    private static readonly pb::MessageParser<GetJsTicketResponse> _parser = new pb::MessageParser<GetJsTicketResponse>(() => new GetJsTicketResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetJsTicketResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetJsTicketResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetJsTicketResponse(GetJsTicketResponse other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      jsTicket_ = other.jsTicket_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetJsTicketResponse Clone() {
      return new GetJsTicketResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Grpcs.Gateway.Wechat.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpcs.Gateway.Wechat.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "js_ticket" field.</summary>
    public const int JsTicketFieldNumber = 2;
    private string jsTicket_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsTicket {
      get { return jsTicket_; }
      set {
        jsTicket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetJsTicketResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetJsTicketResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (JsTicket != other.JsTicket) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (JsTicket.Length != 0) hash ^= JsTicket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (JsTicket.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsTicket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (JsTicket.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsTicket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetJsTicketResponse other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Grpcs.Gateway.Wechat.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.JsTicket.Length != 0) {
        JsTicket = other.JsTicket;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Grpcs.Gateway.Wechat.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 18: {
            JsTicket = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadImageRequest : pb::IMessage<UploadImageRequest> {
    private static readonly pb::MessageParser<UploadImageRequest> _parser = new pb::MessageParser<UploadImageRequest>(() => new UploadImageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadImageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadImageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadImageRequest(UploadImageRequest other) : this() {
      appId_ = other.appId_;
      file_ = other.file_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadImageRequest Clone() {
      return new UploadImageRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 2;
    private pb::ByteString file_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString File {
      get { return file_; }
      set {
        file_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadImageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadImageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (File != other.File) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (File.Length != 0) hash ^= File.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (File.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(File);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (File.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(File);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadImageRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.File.Length != 0) {
        File = other.File;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            File = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadImageResponse : pb::IMessage<UploadImageResponse> {
    private static readonly pb::MessageParser<UploadImageResponse> _parser = new pb::MessageParser<UploadImageResponse>(() => new UploadImageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadImageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadImageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadImageResponse(UploadImageResponse other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      imageId_ = other.imageId_;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadImageResponse Clone() {
      return new UploadImageResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Grpcs.Gateway.Wechat.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpcs.Gateway.Wechat.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "image_id" field.</summary>
    public const int ImageIdFieldNumber = 2;
    private string imageId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageId {
      get { return imageId_; }
      set {
        imageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 3;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadImageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadImageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (ImageId != other.ImageId) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (ImageId.Length != 0) hash ^= ImageId.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (ImageId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ImageId);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (ImageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageId);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadImageResponse other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Grpcs.Gateway.Wechat.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.ImageId.Length != 0) {
        ImageId = other.ImageId;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Grpcs.Gateway.Wechat.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 18: {
            ImageId = input.ReadString();
            break;
          }
          case 26: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteImageRequest : pb::IMessage<DeleteImageRequest> {
    private static readonly pb::MessageParser<DeleteImageRequest> _parser = new pb::MessageParser<DeleteImageRequest>(() => new DeleteImageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteImageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteImageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteImageRequest(DeleteImageRequest other) : this() {
      appId_ = other.appId_;
      imageId_ = other.imageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteImageRequest Clone() {
      return new DeleteImageRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_id" field.</summary>
    public const int ImageIdFieldNumber = 2;
    private string imageId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageId {
      get { return imageId_; }
      set {
        imageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteImageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteImageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (ImageId != other.ImageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (ImageId.Length != 0) hash ^= ImageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (ImageId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ImageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (ImageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteImageRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.ImageId.Length != 0) {
        ImageId = other.ImageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            ImageId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetImageListRequest : pb::IMessage<GetImageListRequest> {
    private static readonly pb::MessageParser<GetImageListRequest> _parser = new pb::MessageParser<GetImageListRequest>(() => new GetImageListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetImageListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetImageListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetImageListRequest(GetImageListRequest other) : this() {
      appId_ = other.appId_;
      page_ = other.page_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetImageListRequest Clone() {
      return new GetImageListRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private int page_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetImageListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetImageListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (Page != other.Page) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Page);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetImageListRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 16: {
            Page = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImageItem : pb::IMessage<ImageItem> {
    private static readonly pb::MessageParser<ImageItem> _parser = new pb::MessageParser<ImageItem>(() => new ImageItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageItem(ImageItem other) : this() {
      imageId_ = other.imageId_;
      updateTime_ = other.updateTime_;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageItem Clone() {
      return new ImageItem(this);
    }

    /// <summary>Field number for the "image_id" field.</summary>
    public const int ImageIdFieldNumber = 1;
    private string imageId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageId {
      get { return imageId_; }
      set {
        imageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 2;
    private int updateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 3;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ImageId != other.ImageId) return false;
      if (UpdateTime != other.UpdateTime) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ImageId.Length != 0) hash ^= ImageId.GetHashCode();
      if (UpdateTime != 0) hash ^= UpdateTime.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ImageId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ImageId);
      }
      if (UpdateTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UpdateTime);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ImageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageId);
      }
      if (UpdateTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpdateTime);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageItem other) {
      if (other == null) {
        return;
      }
      if (other.ImageId.Length != 0) {
        ImageId = other.ImageId;
      }
      if (other.UpdateTime != 0) {
        UpdateTime = other.UpdateTime;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ImageId = input.ReadString();
            break;
          }
          case 16: {
            UpdateTime = input.ReadInt32();
            break;
          }
          case 26: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetImageListResponse : pb::IMessage<GetImageListResponse> {
    private static readonly pb::MessageParser<GetImageListResponse> _parser = new pb::MessageParser<GetImageListResponse>(() => new GetImageListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetImageListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetImageListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetImageListResponse(GetImageListResponse other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      total_ = other.total_;
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetImageListResponse Clone() {
      return new GetImageListResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Grpcs.Gateway.Wechat.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpcs.Gateway.Wechat.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Grpcs.Gateway.Wechat.ImageItem> _repeated_list_codec
        = pb::FieldCodec.ForMessage(26, global::Grpcs.Gateway.Wechat.ImageItem.Parser);
    private readonly pbc::RepeatedField<global::Grpcs.Gateway.Wechat.ImageItem> list_ = new pbc::RepeatedField<global::Grpcs.Gateway.Wechat.ImageItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpcs.Gateway.Wechat.ImageItem> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetImageListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetImageListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (Total != other.Total) return false;
      if(!list_.Equals(other.list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      list_.WriteTo(output, _repeated_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += list_.CalculateSize(_repeated_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetImageListResponse other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Grpcs.Gateway.Wechat.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Grpcs.Gateway.Wechat.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetQrCodeRequest : pb::IMessage<GetQrCodeRequest> {
    private static readonly pb::MessageParser<GetQrCodeRequest> _parser = new pb::MessageParser<GetQrCodeRequest>(() => new GetQrCodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetQrCodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQrCodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQrCodeRequest(GetQrCodeRequest other) : this() {
      appId_ = other.appId_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQrCodeRequest Clone() {
      return new GetQrCodeRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetQrCodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetQrCodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetQrCodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetQrCodeResponse : pb::IMessage<GetQrCodeResponse> {
    private static readonly pb::MessageParser<GetQrCodeResponse> _parser = new pb::MessageParser<GetQrCodeResponse>(() => new GetQrCodeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetQrCodeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpcs.Gateway.Wechat.WechatReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQrCodeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQrCodeResponse(GetQrCodeResponse other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      imageUrl_ = other.imageUrl_;
      qrcodeUrl_ = other.qrcodeUrl_;
      expired_ = other.expired_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQrCodeResponse Clone() {
      return new GetQrCodeResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Grpcs.Gateway.Wechat.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpcs.Gateway.Wechat.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "image_url" field.</summary>
    public const int ImageUrlFieldNumber = 2;
    private string imageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUrl {
      get { return imageUrl_; }
      set {
        imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qrcode_url" field.</summary>
    public const int QrcodeUrlFieldNumber = 3;
    private string qrcodeUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QrcodeUrl {
      get { return qrcodeUrl_; }
      set {
        qrcodeUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expired" field.</summary>
    public const int ExpiredFieldNumber = 4;
    private int expired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Expired {
      get { return expired_; }
      set {
        expired_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetQrCodeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetQrCodeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (ImageUrl != other.ImageUrl) return false;
      if (QrcodeUrl != other.QrcodeUrl) return false;
      if (Expired != other.Expired) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
      if (QrcodeUrl.Length != 0) hash ^= QrcodeUrl.GetHashCode();
      if (Expired != 0) hash ^= Expired.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (ImageUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ImageUrl);
      }
      if (QrcodeUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(QrcodeUrl);
      }
      if (Expired != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Expired);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (ImageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
      }
      if (QrcodeUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QrcodeUrl);
      }
      if (Expired != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Expired);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetQrCodeResponse other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Grpcs.Gateway.Wechat.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.ImageUrl.Length != 0) {
        ImageUrl = other.ImageUrl;
      }
      if (other.QrcodeUrl.Length != 0) {
        QrcodeUrl = other.QrcodeUrl;
      }
      if (other.Expired != 0) {
        Expired = other.Expired;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Grpcs.Gateway.Wechat.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 18: {
            ImageUrl = input.ReadString();
            break;
          }
          case 26: {
            QrcodeUrl = input.ReadString();
            break;
          }
          case 32: {
            Expired = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
